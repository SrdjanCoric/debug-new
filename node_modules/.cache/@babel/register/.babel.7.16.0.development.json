{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/CannyServer.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/CannyServer.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/CannyServer.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/CannyServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/",
        "sourceFileName": "CannyServer.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _GetPostsEndpoint = _interopRequireDefault(require(\"./endpoints/GetPostsEndpoint\"));\n\nvar _HTTPServer = _interopRequireDefault(require(\"./webserver/HTTPServer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar httpServer = new _HTTPServer[\"default\"]({\n  endpoints: {\n    '/api/posts/get': _GetPostsEndpoint[\"default\"]\n  }\n});\nhttpServer.start();\nconsole.log('Ready to receive requests');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhbm55U2VydmVyLmpzIl0sIm5hbWVzIjpbImh0dHBTZXJ2ZXIiLCJIVFRQU2VydmVyIiwiZW5kcG9pbnRzIiwiR2V0UG9zdHNFbmRwb2ludCIsInN0YXJ0IiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLFVBQVUsR0FBRyxJQUFJQyxzQkFBSixDQUFlO0FBQ2hDQyxFQUFBQSxTQUFTLEVBQUU7QUFDVCxzQkFBa0JDO0FBRFQ7QUFEcUIsQ0FBZixDQUFuQjtBQUtBSCxVQUFVLENBQUNJLEtBQVg7QUFDQUMsT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQVoiLCJzb3VyY2VSb290IjoiL2hvbWUvc3JkamFuL2NocmlzdGlhbi9zZXJ2ZXIvZGVidWctdGVzdC9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdldFBvc3RzRW5kcG9pbnQgZnJvbSAnLi9lbmRwb2ludHMvR2V0UG9zdHNFbmRwb2ludCc7XG5pbXBvcnQgSFRUUFNlcnZlciBmcm9tICcuL3dlYnNlcnZlci9IVFRQU2VydmVyJztcblxuY29uc3QgaHR0cFNlcnZlciA9IG5ldyBIVFRQU2VydmVyKHtcbiAgZW5kcG9pbnRzOiB7XG4gICAgJy9hcGkvcG9zdHMvZ2V0JzogR2V0UG9zdHNFbmRwb2ludCxcbiAgfSxcbn0pO1xuaHR0cFNlcnZlci5zdGFydCgpO1xuY29uc29sZS5sb2coJ1JlYWR5IHRvIHJlY2VpdmUgcmVxdWVzdHMnKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "CannyServer.js"
      ],
      "names": [
        "httpServer",
        "HTTPServer",
        "endpoints",
        "GetPostsEndpoint",
        "start",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,sBAAJ,CAAe;AAChCC,EAAAA,SAAS,EAAE;AACT,sBAAkBC;AADT;AADqB,CAAf,CAAnB;AAKAH,UAAU,CAACI,KAAX;AACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/",
      "sourcesContent": [
        "import GetPostsEndpoint from './endpoints/GetPostsEndpoint';\nimport HTTPServer from './webserver/HTTPServer';\n\nconst httpServer = new HTTPServer({\n  endpoints: {\n    '/api/posts/get': GetPostsEndpoint,\n  },\n});\nhttpServer.start();\nconsole.log('Ready to receive requests');\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/endpoints/GetPostsEndpoint.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/endpoints/GetPostsEndpoint.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/endpoints/GetPostsEndpoint.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/endpoints/GetPostsEndpoint.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/endpoints/",
        "sourceFileName": "GetPostsEndpoint.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _getPosts2 = _interopRequireDefault(require(\"../data/getPosts\"));\n\nvar _validateInput = _interopRequireDefault(require(\"../utils/validateInput\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar GetPostsEndpoint = {\n  data: {\n    page: {\n      validator: _validateInput[\"default\"].integer,\n      \"default\": 1\n    },\n    sort: {\n      validator: _validateInput[\"default\"].oneOf(['new', 'old', 'top']),\n      \"default\": 'old'\n    }\n  },\n  respond: function () {\n    var _respond = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(request) {\n      var _request$getData, page, sort, _getPosts, pages, posts;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _request$getData = request.getData(), page = _request$getData.page, sort = _request$getData.sort;\n              _getPosts = (0, _getPosts2[\"default\"])(page, sort), pages = _getPosts.pages, posts = _getPosts.posts;\n              request.respondJSON(JSON.stringify({\n                pages: pages,\n                posts: posts\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function respond(_x) {\n      return _respond.apply(this, arguments);\n    }\n\n    return respond;\n  }()\n};\nmodule.exports = GetPostsEndpoint;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdldFBvc3RzRW5kcG9pbnQuanMiXSwibmFtZXMiOlsiR2V0UG9zdHNFbmRwb2ludCIsImRhdGEiLCJwYWdlIiwidmFsaWRhdG9yIiwidmFsaWRhdGVJbnB1dCIsImludGVnZXIiLCJzb3J0Iiwib25lT2YiLCJyZXNwb25kIiwicmVxdWVzdCIsImdldERhdGEiLCJwYWdlcyIsInBvc3RzIiwicmVzcG9uZEpTT04iLCJKU09OIiwic3RyaW5naWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFHQSxJQUFNQSxnQkFBZ0IsR0FBRztBQUN2QkMsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRTtBQUFFQyxNQUFBQSxTQUFTLEVBQUVDLDBCQUFjQyxPQUEzQjtBQUFvQyxpQkFBUztBQUE3QyxLQURGO0FBRUpDLElBQUFBLElBQUksRUFBRTtBQUFFSCxNQUFBQSxTQUFTLEVBQUVDLDBCQUFjRyxLQUFkLENBQW9CLENBQ3JDLEtBRHFDLEVBRXJDLEtBRnFDLEVBR3JDLEtBSHFDLENBQXBCLENBQWI7QUFJRixpQkFBUztBQUpQO0FBRkYsR0FEaUI7QUFVdkJDLEVBQUFBLE9BQU87QUFBQSwyRUFBRSxpQkFBZUMsT0FBZjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUNBQ2dCQSxPQUFPLENBQUNDLE9BQVIsRUFEaEIsRUFDQ1IsSUFERCxvQkFDQ0EsSUFERCxFQUNPSSxJQURQLG9CQUNPQSxJQURQO0FBQUEsMEJBTUgsMkJBQVNKLElBQVQsRUFBZUksSUFBZixDQU5HLEVBSUxLLEtBSkssYUFJTEEsS0FKSyxFQUtMQyxLQUxLLGFBS0xBLEtBTEs7QUFRUEgsY0FBQUEsT0FBTyxDQUFDSSxXQUFSLENBQW9CQyxJQUFJLENBQUNDLFNBQUwsQ0FBZTtBQUNqQ0osZ0JBQUFBLEtBQUssRUFBTEEsS0FEaUM7QUFFakNDLGdCQUFBQSxLQUFLLEVBQUxBO0FBRmlDLGVBQWYsQ0FBcEI7O0FBUk87QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBRjs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQVZnQixDQUF6QjtBQXlCQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsZ0JBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3NyZGphbi9jaHJpc3RpYW4vc2VydmVyL2RlYnVnLXRlc3Qvc2VydmVyL2VuZHBvaW50cy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ2V0UG9zdHMgZnJvbSAnLi4vZGF0YS9nZXRQb3N0cyc7XG5pbXBvcnQgdmFsaWRhdGVJbnB1dCBmcm9tICcuLi91dGlscy92YWxpZGF0ZUlucHV0JztcblxuXG5jb25zdCBHZXRQb3N0c0VuZHBvaW50ID0ge1xuICBkYXRhOiB7XG4gICAgcGFnZTogeyB2YWxpZGF0b3I6IHZhbGlkYXRlSW5wdXQuaW50ZWdlciwgZGVmYXVsdDogMSB9LFxuICAgIHNvcnQ6IHsgdmFsaWRhdG9yOiB2YWxpZGF0ZUlucHV0Lm9uZU9mKFtcbiAgICAgICduZXcnLFxuICAgICAgJ29sZCcsXG4gICAgICAndG9wJyxcbiAgICBdKSwgZGVmYXVsdDogJ29sZCcgfSxcbiAgfSxcblxuICByZXNwb25kOiBhc3luYyBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgY29uc3QgeyBwYWdlLCBzb3J0IH0gPSByZXF1ZXN0LmdldERhdGEoKTtcblxuICAgIGNvbnN0IHtcbiAgICAgIHBhZ2VzLFxuICAgICAgcG9zdHMsXG4gICAgfSA9IGdldFBvc3RzKHBhZ2UsIHNvcnQpO1xuXG4gICAgcmVxdWVzdC5yZXNwb25kSlNPTihKU09OLnN0cmluZ2lmeSh7XG4gICAgICBwYWdlcyxcbiAgICAgIHBvc3RzLFxuICAgIH0pKTtcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gR2V0UG9zdHNFbmRwb2ludDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "GetPostsEndpoint.js"
      ],
      "names": [
        "GetPostsEndpoint",
        "data",
        "page",
        "validator",
        "validateInput",
        "integer",
        "sort",
        "oneOf",
        "respond",
        "request",
        "getData",
        "pages",
        "posts",
        "respondJSON",
        "JSON",
        "stringify",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;AAGA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAEC,0BAAcC,OAA3B;AAAoC,iBAAS;AAA7C,KADF;AAEJC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,SAAS,EAAEC,0BAAcG,KAAd,CAAoB,CACrC,KADqC,EAErC,KAFqC,EAGrC,KAHqC,CAApB,CAAb;AAIF,iBAAS;AAJP;AAFF,GADiB;AAUvBC,EAAAA,OAAO;AAAA,2EAAE,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCACgBA,OAAO,CAACC,OAAR,EADhB,EACCR,IADD,oBACCA,IADD,EACOI,IADP,oBACOA,IADP;AAAA,0BAMH,2BAASJ,IAAT,EAAeI,IAAf,CANG,EAILK,KAJK,aAILA,KAJK,EAKLC,KALK,aAKLA,KALK;AAQPH,cAAAA,OAAO,CAACI,WAAR,CAAoBC,IAAI,CAACC,SAAL,CAAe;AACjCJ,gBAAAA,KAAK,EAALA,KADiC;AAEjCC,gBAAAA,KAAK,EAALA;AAFiC,eAAf,CAApB;;AARO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAVgB,CAAzB;AAyBAI,MAAM,CAACC,OAAP,GAAiBjB,gBAAjB",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/endpoints/",
      "sourcesContent": [
        "import getPosts from '../data/getPosts';\nimport validateInput from '../utils/validateInput';\n\n\nconst GetPostsEndpoint = {\n  data: {\n    page: { validator: validateInput.integer, default: 1 },\n    sort: { validator: validateInput.oneOf([\n      'new',\n      'old',\n      'top',\n    ]), default: 'old' },\n  },\n\n  respond: async function(request) {\n    const { page, sort } = request.getData();\n\n    const {\n      pages,\n      posts,\n    } = getPosts(page, sort);\n\n    request.respondJSON(JSON.stringify({\n      pages,\n      posts,\n    }));\n  },\n};\n\nmodule.exports = GetPostsEndpoint;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/data/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/data/getPosts.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/data/getPosts.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/data/getPosts.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/data/getPosts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
        "sourceFileName": "getPosts.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _posts = _interopRequireDefault(require(\"./posts\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PageSize = 10;\n\nvar _default = function _default(page, sort) {\n  var start = PageSize * (page - 1);\n  var end = PageSize * page;\n\n  var posts = _posts[\"default\"].slice(start, end);\n\n  if (sort === 'new') {\n    posts.sort(function (a, b) {\n      return new Date(b.created) - new Date(a.created);\n    });\n  } else if (sort === 'old') {\n    posts.sort(function (a, b) {\n      return new Date(a.created) - new Date(b.created);\n    });\n  } else if (sort === 'top') {\n    posts.sort(function (a, b) {\n      return b.votes - a.votes;\n    });\n  }\n\n  return {\n    pages: Math.ceil(_posts[\"default\"].length / PageSize),\n    posts: posts\n  };\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFBvc3RzLmpzIl0sIm5hbWVzIjpbIlBhZ2VTaXplIiwicGFnZSIsInNvcnQiLCJzdGFydCIsImVuZCIsInBvc3RzIiwiUG9zdHMiLCJzbGljZSIsImEiLCJiIiwiRGF0ZSIsImNyZWF0ZWQiLCJ2b3RlcyIsInBhZ2VzIiwiTWF0aCIsImNlaWwiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBLElBQU1BLFFBQVEsR0FBRyxFQUFqQjs7ZUFFZSxrQkFBQ0MsSUFBRCxFQUFPQyxJQUFQLEVBQWdCO0FBQzdCLE1BQU1DLEtBQUssR0FBR0gsUUFBUSxJQUFJQyxJQUFJLEdBQUcsQ0FBWCxDQUF0QjtBQUNBLE1BQU1HLEdBQUcsR0FBR0osUUFBUSxHQUFHQyxJQUF2Qjs7QUFFQSxNQUFNSSxLQUFLLEdBQUdDLGtCQUFNQyxLQUFOLENBQVlKLEtBQVosRUFBbUJDLEdBQW5CLENBQWQ7O0FBQ0EsTUFBSUYsSUFBSSxLQUFLLEtBQWIsRUFBb0I7QUFDbEJHLElBQUFBLEtBQUssQ0FBQ0gsSUFBTixDQUFXLFVBQUNNLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQ25CLGFBQU8sSUFBSUMsSUFBSixDQUFTRCxDQUFDLENBQUNFLE9BQVgsSUFBc0IsSUFBSUQsSUFBSixDQUFTRixDQUFDLENBQUNHLE9BQVgsQ0FBN0I7QUFDRCxLQUZEO0FBR0QsR0FKRCxNQUlPLElBQUlULElBQUksS0FBSyxLQUFiLEVBQW9CO0FBQ3pCRyxJQUFBQSxLQUFLLENBQUNILElBQU4sQ0FBVyxVQUFDTSxDQUFELEVBQUlDLENBQUosRUFBVTtBQUNuQixhQUFPLElBQUlDLElBQUosQ0FBU0YsQ0FBQyxDQUFDRyxPQUFYLElBQXNCLElBQUlELElBQUosQ0FBU0QsQ0FBQyxDQUFDRSxPQUFYLENBQTdCO0FBQ0QsS0FGRDtBQUdELEdBSk0sTUFJQSxJQUFJVCxJQUFJLEtBQUssS0FBYixFQUFvQjtBQUN6QkcsSUFBQUEsS0FBSyxDQUFDSCxJQUFOLENBQVcsVUFBQ00sQ0FBRCxFQUFJQyxDQUFKLEVBQVU7QUFDbkIsYUFBT0EsQ0FBQyxDQUFDRyxLQUFGLEdBQVVKLENBQUMsQ0FBQ0ksS0FBbkI7QUFDRCxLQUZEO0FBR0Q7O0FBRUQsU0FBTztBQUNMQyxJQUFBQSxLQUFLLEVBQUVDLElBQUksQ0FBQ0MsSUFBTCxDQUFVVCxrQkFBTVUsTUFBTixHQUFlaEIsUUFBekIsQ0FERjtBQUVMSyxJQUFBQSxLQUFLLEVBQUxBO0FBRkssR0FBUDtBQUlELEMiLCJzb3VyY2VSb290IjoiL2hvbWUvc3JkamFuL2NocmlzdGlhbi9zZXJ2ZXIvZGVidWctdGVzdC9zZXJ2ZXIvZGF0YS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUG9zdHMgZnJvbSAnLi9wb3N0cyc7XG5cbmNvbnN0IFBhZ2VTaXplID0gMTA7XG5cbmV4cG9ydCBkZWZhdWx0IChwYWdlLCBzb3J0KSA9PiB7XG4gIGNvbnN0IHN0YXJ0ID0gUGFnZVNpemUgKiAocGFnZSAtIDEpO1xuICBjb25zdCBlbmQgPSBQYWdlU2l6ZSAqIHBhZ2U7XG5cbiAgY29uc3QgcG9zdHMgPSBQb3N0cy5zbGljZShzdGFydCwgZW5kKTtcbiAgaWYgKHNvcnQgPT09ICduZXcnKSB7XG4gICAgcG9zdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKGIuY3JlYXRlZCkgLSBuZXcgRGF0ZShhLmNyZWF0ZWQpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHNvcnQgPT09ICdvbGQnKSB7XG4gICAgcG9zdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKGEuY3JlYXRlZCkgLSBuZXcgRGF0ZShiLmNyZWF0ZWQpO1xuICAgIH0pO1xuICB9IGVsc2UgaWYgKHNvcnQgPT09ICd0b3AnKSB7XG4gICAgcG9zdHMuc29ydCgoYSwgYikgPT4ge1xuICAgICAgcmV0dXJuIGIudm90ZXMgLSBhLnZvdGVzO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYWdlczogTWF0aC5jZWlsKFBvc3RzLmxlbmd0aCAvIFBhZ2VTaXplKSxcbiAgICBwb3N0cyxcbiAgfTtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "getPosts.js"
      ],
      "names": [
        "PageSize",
        "page",
        "sort",
        "start",
        "end",
        "posts",
        "Posts",
        "slice",
        "a",
        "b",
        "Date",
        "created",
        "votes",
        "pages",
        "Math",
        "ceil",
        "length"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA,IAAMA,QAAQ,GAAG,EAAjB;;eAEe,kBAACC,IAAD,EAAOC,IAAP,EAAgB;AAC7B,MAAMC,KAAK,GAAGH,QAAQ,IAAIC,IAAI,GAAG,CAAX,CAAtB;AACA,MAAMG,GAAG,GAAGJ,QAAQ,GAAGC,IAAvB;;AAEA,MAAMI,KAAK,GAAGC,kBAAMC,KAAN,CAAYJ,KAAZ,EAAmBC,GAAnB,CAAd;;AACA,MAAIF,IAAI,KAAK,KAAb,EAAoB;AAClBG,IAAAA,KAAK,CAACH,IAAN,CAAW,UAACM,CAAD,EAAIC,CAAJ,EAAU;AACnB,aAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,OAAX,IAAsB,IAAID,IAAJ,CAASF,CAAC,CAACG,OAAX,CAA7B;AACD,KAFD;AAGD,GAJD,MAIO,IAAIT,IAAI,KAAK,KAAb,EAAoB;AACzBG,IAAAA,KAAK,CAACH,IAAN,CAAW,UAACM,CAAD,EAAIC,CAAJ,EAAU;AACnB,aAAO,IAAIC,IAAJ,CAASF,CAAC,CAACG,OAAX,IAAsB,IAAID,IAAJ,CAASD,CAAC,CAACE,OAAX,CAA7B;AACD,KAFD;AAGD,GAJM,MAIA,IAAIT,IAAI,KAAK,KAAb,EAAoB;AACzBG,IAAAA,KAAK,CAACH,IAAN,CAAW,UAACM,CAAD,EAAIC,CAAJ,EAAU;AACnB,aAAOA,CAAC,CAACG,KAAF,GAAUJ,CAAC,CAACI,KAAnB;AACD,KAFD;AAGD;;AAED,SAAO;AACLC,IAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUT,kBAAMU,MAAN,GAAehB,QAAzB,CADF;AAELK,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,C",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
      "sourcesContent": [
        "import Posts from './posts';\n\nconst PageSize = 10;\n\nexport default (page, sort) => {\n  const start = PageSize * (page - 1);\n  const end = PageSize * page;\n\n  const posts = Posts.slice(start, end);\n  if (sort === 'new') {\n    posts.sort((a, b) => {\n      return new Date(b.created) - new Date(a.created);\n    });\n  } else if (sort === 'old') {\n    posts.sort((a, b) => {\n      return new Date(a.created) - new Date(b.created);\n    });\n  } else if (sort === 'top') {\n    posts.sort((a, b) => {\n      return b.votes - a.votes;\n    });\n  }\n\n  return {\n    pages: Math.ceil(Posts.length / PageSize),\n    posts,\n  };\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/data/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/data/posts.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/data/posts.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/data/posts.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/data/posts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
        "sourceFileName": "posts.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _default = [{\n  created: '2016-03-07T05:24:40.340Z',\n  details: 'Right now we only support single backticks. Would be nice to do triple as well... Consider supporting more or all of markdown but I\\'m not sure that\\'s the right direction.',\n  title: 'Support triple backtick codeblocks',\n  votes: 17\n}, {\n  created: '2016-03-31T14:31:15.222Z',\n  details: 'Maybe using some tool that allows the community to work on the translations.',\n  title: 'Translate into different languages',\n  votes: 46\n}, {\n  created: '2016-04-05T16:47:55.487Z',\n  details: 'Allow video attachments because sometimes a single photo isn\\'t enough to explain the issue.',\n  title: 'Video attachments',\n  votes: 20\n}, {\n  created: '2016-04-30T19:10:37.058Z',\n  details: 'When realising that their post actually doesn\\'t make much sense, the only option users have to get rid of it is deleting the post. This is not optimal, since then other users might be submitting that again even though it was posted before!\\n' + '\\n' + 'It\\'d be great if users could close their own posts.',\n  title: 'Allow users to mark their own posts as \"Closed',\n  votes: 21\n}, {\n  created: '2016-06-15T19:09:34.244Z',\n  details: 'Would be nice to have instant or hourly email notifications to help us be more responsive with our users.',\n  title: 'Instant email notifications',\n  votes: 19\n}, {\n  created: '2016-08-03T23:29:18.588Z',\n  details: 'Teams responding to posts are a great way to show users they\\'re listening. Sometimes posts get lost and end up not being responded to. It would be great to have a section in the dashboard with unanswered posts ranked by number of upvotes.',\n  title: 'Unanswered posts reminders',\n  votes: 49\n}, {\n  created: '2017-02-10T01:14:54.330Z',\n  details: 'A native widget would feel a lot better than loading a web view. If we can do this with single sign-on, the experience would be super seamless.\\n' + '\\n' + 'We\\'d probably start with iOS — something like this:',\n  title: 'Native Mobile Widget',\n  votes: 81\n}, {\n  created: '2017-03-06T10:39:31.283Z',\n  details: 'Could use IP to deduplicate votes',\n  title: 'Allow posting without registering',\n  votes: 31\n}, {\n  created: '2017-03-15T06:56:57.748Z',\n  details: 'I can see many features which are worthless to this super product. Please, please do not follow every idea :(\\n' + '\\n' + 'I want to down vote all those Nice to have ideas.',\n  title: 'Downvote',\n  votes: 32\n}, {\n  created: '2017-03-20T00:12:52.784Z',\n  details: 'Expose a single signed on user\\'s notifications via API so they can be integrated into the parent\\'s site.',\n  title: 'Notifications integration',\n  votes: 11\n}, {\n  created: '2017-03-20T21:17:28.035Z',\n  details: \"To avoid people just up-voting because it's \\\"cool\\\" and resulting in non-essential features, allow for \\\"types\\\" of votes like: \\\"I need this\\\" or \\\"I want this\\\" or \\\"This is cool\",\n  title: 'Vote Types - Sentiment',\n  votes: 33\n}, {\n  created: '2017-03-21T02:16:55.725Z',\n  details: 'As a board owner, I want to create  a board that either anonymizes end users such that they are not aware of each other, or allows an end user to anonymize themselves.\\n' + '\\n' + 'This would function similar to the way that public google docs/sheets anonymize the viewers. \"Anonymous Armadillo',\n  title: 'Anonymized Boards',\n  votes: 17\n}, {\n  created: '2017-03-26T22:14:50.496Z',\n  details: 'Change users\\' email/name on their behalf, or use updated email/name from SSO token automatically',\n  title: 'Ability to manage users',\n  votes: 27\n}, {\n  created: '2017-03-29T18:04:51.086Z',\n  details: 'I constantly have to switch back to Admin View on my product. If I click the Canny logo to go back to my product\\'s main page, it switches back to Public View. Also, clicking from an email notification switches to Public View. \\n' + '\\n' + 'To be honest, I see no value in Public View, so it\\'s a bit strange to me that it switches out of Admin View on my own product.',\n  title: 'Default to Admin View',\n  votes: 15\n}, {\n  created: '2017-04-06T17:38:41.525Z',\n  details: 'Limit the number of votes a user gets (say, 10-15 votes). As features are changed to Complete, give them those votes back to use on other features. I think this would really help surface the top features when people have to be more picky about the things they vote on.',\n  title: 'Limit the Number of Votes Someone Gets',\n  votes: 72\n}, {\n  created: '2017-04-18T08:05:48.418Z',\n  details: 'It would be nice to add support for markup so you could create **bold**, *italic* text, headings, * Lists and --- dividers. ✌🏻',\n  title: 'Possibility to use markup',\n  votes: 13\n}, {\n  created: '2017-05-05T23:46:51.785Z',\n  details: 'Would love to be able to post a comment or a post with options/ideas, even screenshots of how we think about solving the feature request. Then for the people who want that feature can give more direct feedback on which version they might like and also have the ability to comment why they picked that option. \\n' + '\\n' + 'Example: \"Folders in lists\" is a popular feature for us. But we have a few ways of thinking about folders for lists in WeDo. Would be great to ask our users in a simple poll, \"Which design do you like the most, and why?\" \\n' + '\\n' + 'Yes, this can be done in comments and attaching photos. But the less steps it takes for someone to voice their feedback/opinion the more likely we\\'d see it. If it could just be a one click vote, optional comment. Love that.',\n  title: 'Polls',\n  votes: 18\n}, {\n  created: '2017-05-16T23:40:55.835Z',\n  details: 'Similar to https://feedback.canny.io/feature-requests/p/being-able-to-vote-on-behalf-of-your-users, except for creating posts.',\n  title: 'Be able to post on behalf of your users',\n  votes: 68\n}, {\n  created: '2017-05-27T17:39:53.747Z',\n  details: 'It would be useful for keeping track of overall progress made on posts.',\n  title: 'Post count for each status',\n  votes: 11\n}, {\n  created: '2017-06-02T21:23:22.712Z',\n  details: 'So it plays nicely with a dark background.',\n  title: 'Widget dark theme',\n  votes: 35\n}, {\n  created: '2017-06-23T18:09:45.204Z',\n  details: 'I\\'d love to be able to close voting/commenting on a post + maybe hide it from users to keep our list of posts cleaner.',\n  title: 'A way to hide posts',\n  votes: 11\n}, {\n  created: '2017-07-18T21:05:14.338Z',\n  details: 'Add ability to merge users that were created via the \"Add Voter\" form in Admin View.',\n  title: 'Merge Users',\n  votes: 14\n}, {\n  created: '2017-07-31T07:06:37.543Z',\n  details: 'We regularly have users replying to Canny\\'s notification emails, which sends the reply email to you. While you guys have been great about forwarding these on, it would be better to either include our email as the Reply-To address in the notification email, or to have the reply added automatically to the post.',\n  title: 'Reply to notification email to post',\n  votes: 13\n}, {\n  created: '2017-08-02T20:59:25.943Z',\n  details: 'Currently, tags are only available for team admins. Users should be able see them as well.',\n  title: 'Allow certain tags to be made public',\n  votes: 117\n}, {\n  created: '2017-09-18T06:45:59.371Z',\n  details: 'A major issue often results in a lot of duplicate posts in a short time. Would be nice to have a banner that we can use to make major announcements / provide updates. Eg \\'We are aware of issue X - a fix will be available in Y hours\\'. Could potentially do this via sticky / pinned posts as well.',\n  title: 'Banner for major announcements',\n  votes: 17\n}, {\n  created: '2017-09-22T01:09:34.616Z',\n  details: 'Allow outgoing emails to be branded with company email domain vs canny.io.  Have SPF/DKIM settings for deliverability.',\n  title: 'Custom email domain for outgoing emails',\n  votes: 60\n}, {\n  created: '2017-10-17T06:27:31.145Z',\n  details: 'Receive email when a item I have created or voted on is commented on.',\n  title: 'Email notification',\n  votes: 12\n}, {\n  created: '2017-11-11T22:48:26.392Z',\n  details: 'Currently you can only search for terms in the original post, not in the comments. Would be great to have the option to search either or both, so that you can find important terms wherever they get posted.',\n  title: 'Search for terms in both title and comments',\n  votes: 51\n}, {\n  created: '2017-11-14T07:33:54.765Z',\n  details: 'Would be great if we could filter notifications by:\\n' + '\\n' + '-Post creations\\n' + '-Mentions\\n' + '-Comments\\n' + '-Votes\\n' + '\\n' + 'This is especially useful if:\\n' + '\\n' + '-Notifications volume is high\\n' + '-There\\'s more than one admin\\n' + '-Each admin would like to isolate their own mentions first, to be able to prioritize follow-ups',\n  title: 'Filter notifications',\n  votes: 18\n}, {\n  created: '2017-11-16T02:23:46.465Z',\n  details: 'I know you guys offer a 14 day free trial, but a cheaper or free hobbyist tier with some QOL features cut would be great.\\n' + '\\n' + 'I really like this project, but I can\\'t justify spending $50 a month as a hobbyist.\\n' + '\\n' + 'I suppose your target demographic is probably businesses, rather than individuals or small teams.',\n  title: 'Early-stage startup discount, cheap plan, or free tier',\n  votes: 16\n}, {\n  created: '2017-12-03T06:35:56.226Z',\n  details: 'We currently have 10 boards and each day we delete/merge different posts across these boards. When dug deeper, found that when creating a post, the current board is search and not all of them.',\n  title: 'Global search all boards to avoid duplicates',\n  votes: 70\n}, {\n  created: '2017-12-11T18:20:02.814Z',\n  details: 'If you\\'ve set up feedback.yoursite.com, we should 301 redirect yoursite.canny.io there.',\n  title: 'Redirect Canny subdomain to custom domain',\n  votes: 51\n}, {\n  created: '2018-01-07T21:54:56.060Z',\n  details: 'Allow admin to define default visibility (public, unlisted, private) for new posts in a board. Also allow changing post visibility, so you can use it as a moderation feature.',\n  title: 'Post visibility and moderation',\n  votes: 18\n}, {\n  created: '2018-01-10T02:52:00.242Z',\n  details: 'This would be helpful for adding feature releases and batching multiple features together. For example, if a company has multiple products or high-level components that contain a variety features, related or otherwise.',\n  title: 'Additional hierarchy layer, i.e. sub boards',\n  votes: 19\n}, {\n  created: '2018-01-15T20:01:57.845Z',\n  details: 'Add the possibility to select only few boards on \"Roadmap\" screen.',\n  title: 'Filter the roadmap by board/category/tag',\n  votes: 65\n}, {\n  created: '2018-01-16T22:06:22.541Z',\n  details: 'I absolutely love the new Roadmap view, but my one critique is that I feel like it doesn\\'t scale well when you have a lot of items. \\n' + '\\n' + 'IMO, I feel like the design feels really squished, and the scrolling-within boxes feels  awkward. If the items line up with the bottom of the box, you might not even realize that it\\'s scrollable. \\n' + '\\n' + 'It\\'s not entirely clear how many items are on each list (a total count would be great too!)\\n' + '\\n' + 'It seems like it would work much better if all three lists just flowed naturally down the page rather than scrolling within their own boxes.',\n  title: 'Make Roadmap scale better for lots of posts',\n  votes: 20\n}, {\n  created: '2018-01-24T05:20:48.164Z',\n  details: 'Our users keep asking us for the same things over and over. What I usually do, I redirect them to the official Canny thread by sending them links. \\n' + '\\n' + 'It would be cool as an admin If I can pin these questions in one board and use it as an FAQ on our website.',\n  title: 'Pinned posts',\n  votes: 13\n}, {\n  created: '2018-01-25T19:55:01.890Z',\n  details: 'Certain customers have mentioned issues with fake accounts / voters.\\n' + '\\n' + 'Some ideas to prevent these issues:\\n' + '– Add a toggle to disable sign up via email.\\n' + '– If more than 1 non-oauth signup from the same IP is detected within 24 hours, make them fill out a captcha.',\n  title: 'Prevent fake accounts',\n  votes: 21\n}, {\n  created: '2018-02-19T09:00:29.182Z',\n  details: 'If a user views feedback.yoursite.com, there should be a link somewhere back to yoursite.com, so they can get back to the main application.',\n  title: 'Link back to main website',\n  votes: 27\n}, {\n  created: '2018-03-05T20:31:12.896Z',\n  details: 'I\\'d like feature requests/bugs to be flagged that hit a certain threshold of similarity. Our users are doing a very light check for duplicates at best and it\\'d be great to have some flagged for the admins to resolve.',\n  title: 'Flag Similar Feature Requests',\n  votes: 21\n}, {\n  created: '2018-03-12T19:50:46.860Z',\n  details: 'Sometimes I want to attach more than just an image to help my users see the issue. Sometimes a PDF with some larger details would be easier to show. Sometimes a video (see https://feedback.canny.io/feature-requests/p/video-attachments).\\n' + '\\n' + 'Being able to do this would also allow the community to serve as a an ad-hoc support service.',\n  title: 'Be able to attach other file types',\n  votes: 40\n}, {\n  created: '2018-03-26T13:16:33.716Z',\n  details: 'I see there\\'s another post on this for tags. It\\'d be immensely helpful to have these for Categories given they\\'re externally-facing. If not reordering, some way to sort either alphabetically or by # of posts within.',\n  title: 'Reorder Categories',\n  votes: 15\n}, {\n  created: '2018-04-02T15:32:11.586Z',\n  details: 'Give the ability to weight requests (say impact & effort, or customizable).  This will allow users to prioritize their list of requests.  Bonus points for displaying it on a matrix.',\n  title: 'Ability for admins to weigh/prioritize requests',\n  votes: 72\n}, {\n  created: '2018-04-04T16:10:46.839Z',\n  details: 'It would be great to be able to set the order in the roadmap column? \\n' + '\\n' + 'I\\'m fairly confident our users would assume there\\'s an order of implementation implied by the order (and we\\'d like to be able to do that).\\n' + '\\n' + 'Would a drag and drop option be possible? Failing that shorting alphabetically so we can do a \\'a) Feature X\\', \\'b. Feature Y\\' type workaround?',\n  title: 'Roadmap Ordering',\n  votes: 41\n}, {\n  created: '2018-04-13T12:47:52.549Z',\n  details: 'It would be great if we could also embed the roadmap via a widget just like we can with the boards.',\n  title: 'Roadmap widget',\n  votes: 99\n}, {\n  created: '2018-05-21T16:06:33.689Z',\n  details: 'Let us customize the names of the statuses. Specifically I want to change \"Under Review\" to \"Researching\" or \"Scoping\".  \"Under Review\" sounds like the post is under review and might get deleted.',\n  title: 'Custom Statuses',\n  votes: 304\n}, {\n  created: '2018-05-28T04:41:31.325Z',\n  details: '',\n  title: 'Remove \"Powered by Canny',\n  votes: 180\n}, {\n  created: '2018-06-06T17:16:25.120Z',\n  details: 'I would like to be able to edit or delete the merged comment',\n  title: 'Edit/Delete Merged Comment',\n  votes: 28\n}, {\n  created: '2018-06-15T14:05:21.548Z',\n  details: '',\n  title: 'Export users',\n  votes: 39\n}, {\n  created: '2018-06-15T15:16:22.084Z',\n  details: 'While scanning Canny, it\\'s hard to tell which posts are linked to Jira and which aren\\'t. It takes too much effort to click into every post to check.\\n' + '\\n' + 'Showing whether the post is linked in the post list view makes this way easier.',\n  title: 'Show whether a Canny post is linked to a Jira issue from the post list view',\n  votes: 12\n}, {\n  created: '2018-07-17T23:32:37.974Z',\n  details: 'Add a privacy setting so that user comments can only be seen by the team, not other users.',\n  title: 'Private Comments',\n  votes: 26\n}, {\n  created: '2018-07-23T15:52:51.041Z',\n  details: 'I\\'d like to share some public information for people viewing and using our board.  But, currently it looks like if the Public view is turned on then it displays full names and organizations from Intercom.  For confidentiality purposes I had to turn off public since it included full names and orgs.  It would be helpful to have an option to only publicly display first names.',\n  title: 'Hide last names from public view',\n  votes: 22\n}, {\n  created: '2018-07-31T03:13:06.343Z',\n  details: 'We would rather only use the voting ability and disable the ability for users to submit posts. Posts would be submitted by admins only.',\n  title: 'Option to disable user submissions/new posts',\n  votes: 25\n}, {\n  created: '2018-08-13T18:05:26.154Z',\n  details: 'In addition to a title and details field, allow admins to add additional custom fields. In another setting where we use Aha to collect feedback from customer-facing teams, we have custom fields to prompt specific questions like:\\n' + '- how would this help solve a customer\\'s problem? (text area)\\n' + '- what is the relevant product area? (single select)\\n' + '- steps to reproduce the bug?\\n' + '\\n' + 'These Qs might be too much for a customer-facing feedback site, but they\\'re super useful for discussing and sorting through ideas internally.',\n  title: 'Customize the create post form',\n  votes: 81\n}, {\n  created: '2018-08-14T17:11:21.863Z',\n  details: 'Instead of send updates via email, send them through the original conversation on Intercom',\n  title: 'Send status updates back through Intercom',\n  votes: 14\n}, {\n  created: '2018-08-24T19:16:32.550Z',\n  details: \"When searching for a voter to add a vote on their behalf, we do a prefix search. This means \\\"John\\\" matches \\\"John Smith\\\", but \\\"Smith\\\" doesn't.\",\n  title: 'Search for users/voters by last name',\n  votes: 43\n}, {\n  created: '2018-08-25T00:15:04.205Z',\n  details: 'Allow customers to give us their Intercom app ID so we can so the messenger on their Canny site.',\n  title: 'Show intercom on canny site',\n  votes: 11\n}, {\n  created: '2018-08-28T22:50:10.424Z',\n  details: 'Send posts to an approval queue. Admins can decide if they want to make it public.',\n  title: 'Approve posts before they go public',\n  votes: 94\n}, {\n  created: '2018-08-31T18:53:53.440Z',\n  details: 'We\\'d like to get more options than just changing the tint colour. Something like setting a solid colour across the top of the screen, or changing navigation menu colours, fonts, etc.',\n  title: 'Allow more styling options (colours, font\\'s, etc)',\n  votes: 10\n}, {\n  created: '2018-09-10T10:08:02.341Z',\n  details: 'It would be great to be able to create your own roadmap view: I\\'d like to define: \\n' + '* the number of columns\\n' + '* the title for each\\n' + '* the status for each.\\n' + '\\n' + 'This would be even more useful if you could create your own statuses as well.',\n  title: 'Create your individual roadmap',\n  votes: 15\n}, {\n  created: '2018-09-25T05:15:22.403Z',\n  details: 'Since our site is using React (and so is the Canny widget), it\\'d be great to be able to import a Canny component directly from an npm package. This would simplify the integration and allow us to manage the imported JS/CSS the same as the rest of our site.\\n' + '\\n' + '(Happy to email a gist of our current integration if you\\'re interested - a few workarounds to show progress while the widget loads)',\n  title: 'Widget as React component',\n  votes: 13\n}, {\n  created: '2018-10-04T14:37:05.721Z',\n  details: 'For example, monthly spend.',\n  title: 'Add weight to votes based on customer attribute',\n  votes: 13\n}, {\n  created: '2018-11-16T16:13:15.434Z',\n  details: 'Nice to have - ability to bulk edit posts e.g. change category, tags, statuses, change board etc.',\n  title: 'Bulk edit',\n  votes: 29\n}, {\n  created: '2018-11-16T22:38:06.719Z',\n  details: 'For people who add votes on behalf of their users but didn\\'t initially add their email address. They should be able to add one after the fact.',\n  title: 'Add/edit voter email',\n  votes: 13\n}, {\n  created: '2018-11-20T14:17:20.225Z',\n  details: 'Have a configuration option to prevent upvotes after a feature has been concluded (closed or completed) or make the completed state more prominent.',\n  title: 'Turn off ability to upvote for completed/closed feature requests',\n  votes: 55\n}, {\n  created: '2018-11-30T21:45:20.378Z',\n  details: '',\n  title: 'Ability to see categories in Intercom app selector',\n  votes: 16\n}, {\n  created: '2018-12-19T21:44:16.323Z',\n  details: 'I\\'m currently unable to tell if a bug that was voted for a lot a long time ago is still gaining a lot of votes. It\\'s hard to keep track of what each submission\\'s votes were last time. It would be useful if cards had a way to show me like a line graph of the votes for each day/week on the admin view.',\n  title: 'Post analytics (vote acceleration, clicks/views)',\n  votes: 14\n}, {\n  created: '2019-02-26T17:32:03.520Z',\n  details: 'Our users want to filter for ideas they submitted, not just voted on. They take a lot of pride in being the genesis for these ideas. This has a number of votes from our users.',\n  title: 'Filter for Own Ideas in Addition to Votes',\n  votes: 32\n}, {\n  created: '2019-03-11T23:15:23.863Z',\n  details: 'When I receive an email notification about \\'Canny\\' I get confused and think the request is about my product, the emails I get are quite similar.',\n  title: 'Bigger distinction between emails about Canny and emails relating to my product',\n  votes: 10\n}, {\n  created: '2019-04-11T21:59:59.410Z',\n  details: 'Could be time based (ex. 3 days, 1 month) or simply how difficult it is (ex. hard, easy). This will help set user expectations.',\n  title: 'Signal for how easy/difficult something is',\n  votes: 11\n}, {\n  created: '2019-04-25T15:49:21.139Z',\n  details: 'Sometimes a comment really refers to something separate. It\\'d be nice if admins could upgrade a comment into a new post.',\n  title: 'Upgrade a comment into a post',\n  votes: 21\n}, {\n  created: '2019-05-02T18:46:45.237Z',\n  details: 'I would like to have a board template so I can use the same settings for sections like \"Create Post Form\", \"Privacy\", and \"Tags\" for all new boards.',\n  title: 'Board Template',\n  votes: 17\n}, {\n  created: '2019-06-12T04:03:20.009Z',\n  details: 'It would be great if you had a full page changelog widget rather than having to click a button to show a popover.',\n  title: 'Full page changelog widget',\n  votes: 26\n}, {\n  created: '2019-06-26T06:51:46.462Z',\n  details: 'Something people can opt into to receive emails about new product changes.',\n  title: 'Email notification for new changelog entries',\n  votes: 21\n}, {\n  created: '2019-06-26T13:28:41.323Z',\n  details: 'Allow people to chime in with feedback and praise on changelog entries.',\n  title: 'Feedback/reactions on changelog entries',\n  votes: 17\n}, {\n  created: '2019-07-01T20:46:32.047Z',\n  details: 'Would be awesome if we supported a messenger home app with the latest changes.',\n  title: 'Changelog messenger home app for Intercom',\n  votes: 23\n}, {\n  created: '2019-07-01T20:47:30.318Z',\n  details: 'Allow people to search for changelog entries',\n  title: 'Changelog search',\n  votes: 13\n}, {\n  created: '2019-07-05T12:57:39.619Z',\n  details: 'It would be really nice if you could link Feedback Items to a Changelog Entry. Sure, you could find the feedback, copy the URL, and add a link to it in the entry, but I\\'m looking for something more convenient and two way.\\n' + '\\n' + 'With my use case, you should be able to link multiple feedback items to a single entry. And the feedback item should have a link back to the entry as well.\\n' + '\\n' + 'Here is what my basic release workflow is:\\n' + '\\n' + '1. When I\\'m done with a feedback item, I mark it as complete (but it hasn\\'t been released yet).\\n' + '\\n' + '2. Once I release the version with the feedback item, I create a changelog entry highlighting the important changes.',\n  title: 'Show linked feedback items in public changelog entry',\n  votes: 15\n}, {\n  created: '2019-07-22T18:25:31.974Z',\n  details: 'Be able to like a changelog post in the app, and maybe see it\\'s traction on social media, like, tweets, shares, etc.',\n  title: 'Likes for Changelog',\n  votes: 33\n}, {\n  created: '2019-07-29T02:32:50.918Z',\n  details: 'A lot of data is in Intercom already so we should be able to pull fields from there for segmentation.',\n  title: 'Pull custom fields from Intercom',\n  votes: 10\n}, {\n  created: '2019-08-09T15:31:48.589Z',\n  details: 'Currently it is not possible to create an internal comment via the API, only public comments.',\n  title: 'Create internal comments via API',\n  votes: 23\n}, {\n  created: '2019-08-13T10:20:59.572Z',\n  details: 'My Customers are not from tech industry and hence will not understand the term \\'Changelog\\' . A better name can be \\'Product Updates\\' . Please make the Changelog text customisable.',\n  title: 'Rename Changelog',\n  votes: 13\n}, {\n  created: '2019-08-23T15:46:14.448Z',\n  details: 'The new UI is causing problems for many tag members. Having all tags displayed helps ensure none are missed.',\n  title: 'Revert Back to Old Tag UI',\n  votes: 21\n}, {\n  created: '2019-09-03T13:49:02.791Z',\n  details: 'Boards may be created for different products and it would be helpful to assign boards to a changelog rather than a single log across all boards.',\n  title: 'Changelog specific to certain board(s)',\n  votes: 12\n}, {\n  created: '2019-09-09T02:36:58.340Z',\n  details: 'Ability to see how many people viewed a changelog post.',\n  title: 'Changelog Analytics',\n  votes: 11\n}, {\n  created: '2019-09-09T20:33:08.701Z',\n  details: 'Problem:\\n' + 'I am lazy, and would like my completed posts (e.g. a feature request) to be easily or automatically added to the Changelog.\\n' + '\\n' + 'Possible solution:\\n' + '- Add an admin button (e.g. \"Show in Changelog\") to existing posts\\n' + \"- Clicking the button shows the \\\"New Changelog entry\\\" form filled out with the existing post's data.\",\n  title: 'Create a Changelog entry from an existing post',\n  votes: 10\n}, {\n  created: '2019-09-24T18:01:51.078Z',\n  details: 'Teams would like a nice overview of what\\'s happening in Canny. Let us know what specific data you\\'re interested in seeing!',\n  title: 'Reporting/analytics',\n  votes: 41\n}, {\n  created: '2019-10-08T09:50:21.058Z',\n  details: \"Rather than just show my name in the comments section when replying to customers, also show my title. It's great if our customers know they're speaking with either a \\\"Product Manager\\\" or a \\\"Customer Success\\\" person etc. Your role could just be added to your profile.\",\n  title: 'Show job role so customers know who\\'s replying to them',\n  votes: 15\n}, {\n  created: '2019-10-16T00:13:10.456Z',\n  details: 'Add a Recently Completed section to the Roadmap view to show posts that were recently marked as completed.',\n  title: 'Recently Completed',\n  votes: 41\n}, {\n  created: '2019-11-12T17:39:29.038Z',\n  details: 'So our customers\\' customers can subscribe to changes',\n  title: 'Changelog RSS feed',\n  votes: 15\n}, {\n  created: '2019-11-21T18:38:00.003Z',\n  details: 'Nice to have, but I like being able to link out to / reference e.g. \"Idea-123\". Similar to referencing \"JIRA-456\", it makes communication much easier and clearer.',\n  title: 'Integer Post ID',\n  votes: 12\n}, {\n  created: '2020-01-31T09:11:44.504Z',\n  details: 'I have a few suggestions for how to improve the \\'Stale posts\\' feature.\\n' + 'Suggestion #1 –– When I have no stale posts it uses a lot of screen estate on the /admin view. I would rather just see my roadmap.\\n' + 'Suggestion #2 –– Update \\'stale posts\\' whenever a new comment or edit is made by an admin, not just on \\'status\\' change. That would make a lot of our features go out of \\'stale\\' mode when we can\\'t change their status.\\n' + 'Suggestion #3 –– If suggestion #2 isn\\'t an option, then make it possible to disable \\'Stale posts\\'. It\\'s not very encouraging getting emails every day that you have 3 features that are \\'stale\\' with red text saying they\\'re \\'6 weeks\\' old. We\\'re often working on big features that can take more than 4 weeks to change status.',\n  title: 'Suggestions for improvements to the \\'Stale posts\\' feature',\n  votes: 15\n}, {\n  created: '2020-03-17T15:40:44.635Z',\n  details: 'I\\'d like the owner field to be able to be seen on the public facing side of our board and not just the admin side! This will help our team as they triage bugs / ideas by communicating to the voters and submitters when something has been taken ownership of.',\n  title: 'Display post owner to the public',\n  votes: 10\n}, {\n  created: '2020-04-23T21:30:03.569Z',\n  details: 'It will be cool to be able to edit the information of an user already created. Like his email and his name.',\n  title: 'Being able to rename and edit users',\n  votes: 46\n}, {\n  created: '2020-06-08T16:05:20.225Z',\n  details: 'My users want to help us out, and suggest some posts to be merged. At our scale, this would be quite tough to manage through comments.',\n  title: 'Suggest posts to be merged',\n  votes: 15\n}, {\n  created: '2020-06-16T14:33:03.389Z',\n  details: 'When creating a Post from Slack default the \"Customer\" field to the Slack user creating the Post.',\n  title: 'Default to current user in Slack integration on post creation',\n  votes: 17\n}, {\n  created: '2020-08-11T13:19:57.058Z',\n  details: 'Right now, the changelog is either fully internal or fully external. It would be nice to be able to have both.',\n  title: 'Internal and external changelog',\n  votes: 10\n}, {\n  created: '2020-09-01T19:03:43.278Z',\n  details: 'It would be helpful to be able to preview the rendered Markdown in posts/comments, especially considering the [supported syntax](https://feedback.canny.io/feature-requests/p/markdown-editing-for-posts) is more limited than traditional Markdown. It would help avoid the mistake of using unsupported syntax, like underscores instead of asterisks to italicize text.',\n  title: 'Preview Markdown in posts/comments',\n  votes: 10\n}, {\n  created: '2020-11-27T10:42:06.854Z',\n  details: 'I installed the Canny Jira App and as a result it\\'s shown on every Jira project of our organization. Could you do something like the Issue Free Checklist App that you can choose the project on which to activate it? Thanks!',\n  title: 'Activate Canny Jira App only on some projects',\n  votes: 25\n}, {\n  created: '2020-12-18T08:50:26.899Z',\n  details: 'Would be great to give an Admin the option to mark a feature request as \"open for early adopters\" and give customers/users/people the ability to request inclusion in a Beta / Early Adopter program. This would reduce time spent looking for and recruiting for this stage of the product development lifecycle.',\n  title: 'Beta / Early Adopter Opt-In',\n  votes: 22\n}];\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "posts.js"
      ],
      "names": [
        "created",
        "details",
        "title",
        "votes"
      ],
      "mappings": ";;;;;;eAAe,CACb;AACEA,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8KAFX;AAGEC,EAAAA,KAAK,EAAE,oCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CADa,EAOb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8EAFX;AAGEC,EAAAA,KAAK,EAAE,oCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAPa,EAab;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8FAFX;AAGEC,EAAAA,KAAK,EAAE,mBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAba,EAmBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uPACP,IADO,GAEP,sDAJJ;AAKEC,EAAAA,KAAK,EAAE,gDALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CAnBa,EA2Bb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,2GAFX;AAGEC,EAAAA,KAAK,EAAE,6BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA3Ba,EAiCb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iPAFX;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjCa,EAuCb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,sJACP,IADO,GAEP,sDAJJ;AAKEC,EAAAA,KAAK,EAAE,sBALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CAvCa,EA+Cb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mCAFX;AAGEC,EAAAA,KAAK,EAAE,mCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA/Ca,EAqDb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oHACP,IADO,GAEP,mDAJJ;AAKEC,EAAAA,KAAK,EAAE,UALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CArDa,EA6Db;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4GAFX;AAGEC,EAAAA,KAAK,EAAE,2BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA7Da,EAmEb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,yLAFT;AAGEC,EAAAA,KAAK,EAAE,wBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnEa,EAyEb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8KACP,IADO,GAEP,mHAJJ;AAKEC,EAAAA,KAAK,EAAE,mBALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CAzEa,EAiFb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mGAFX;AAGEC,EAAAA,KAAK,EAAE,yBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjFa,EAuFb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0OACP,IADO,GAEP,iIAJJ;AAKEC,EAAAA,KAAK,EAAE,uBALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CAvFa,EA+Fb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8QAFX;AAGEC,EAAAA,KAAK,EAAE,wCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA/Fa,EAqGb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iIAFX;AAGEC,EAAAA,KAAK,EAAE,2BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CArGa,EA2Gb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4TACP,IADO,GAEP,iOAFO,GAGP,IAHO,GAIP,kOANJ;AAOEC,EAAAA,KAAK,EAAE,OAPT;AAQEC,EAAAA,KAAK,EAAE;AART,CA3Ga,EAqHb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,gIAFX;AAGEC,EAAAA,KAAK,EAAE,yCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CArHa,EA2Hb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yEAFX;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA3Ha,EAiIb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4CAFX;AAGEC,EAAAA,KAAK,EAAE,mBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjIa,EAuIb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yHAFX;AAGEC,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAvIa,EA6Ib;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,sFAFX;AAGEC,EAAAA,KAAK,EAAE,aAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA7Ia,EAmJb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yTAFX;AAGEC,EAAAA,KAAK,EAAE,qCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnJa,EAyJb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4FAFX;AAGEC,EAAAA,KAAK,EAAE,sCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAzJa,EA+Jb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0SAFX;AAGEC,EAAAA,KAAK,EAAE,gCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA/Ja,EAqKb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,wHAFX;AAGEC,EAAAA,KAAK,EAAE,yCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CArKa,EA2Kb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uEAFX;AAGEC,EAAAA,KAAK,EAAE,oBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA3Ka,EAiLb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,+MAFX;AAGEC,EAAAA,KAAK,EAAE,6CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjLa,EAuLb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0DACP,IADO,GAEP,mBAFO,GAGP,aAHO,GAIP,aAJO,GAKP,UALO,GAMP,IANO,GAOP,iCAPO,GAQP,IARO,GASP,iCATO,GAUP,iCAVO,GAWP,iGAbJ;AAcEC,EAAAA,KAAK,EAAE,sBAdT;AAeEC,EAAAA,KAAK,EAAE;AAfT,CAvLa,EAwMb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,gIACP,IADO,GAEP,wFAFO,GAGP,IAHO,GAIP,mGANJ;AAOEC,EAAAA,KAAK,EAAE,wDAPT;AAQEC,EAAAA,KAAK,EAAE;AART,CAxMa,EAkNb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,kMAFX;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAlNa,EAwNb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0FAFX;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxNa,EA8Nb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,gLAFX;AAGEC,EAAAA,KAAK,EAAE,gCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9Na,EAoOb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4NAFX;AAGEC,EAAAA,KAAK,EAAE,6CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApOa,EA0Ob;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oEAFX;AAGEC,EAAAA,KAAK,EAAE,0CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1Oa,EAgPb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4IACP,IADO,GAEP,yMAFO,GAGP,IAHO,GAIP,gGAJO,GAKP,IALO,GAMP,8IARJ;AASEC,EAAAA,KAAK,EAAE,6CATT;AAUEC,EAAAA,KAAK,EAAE;AAVT,CAhPa,EA4Pb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0JACP,IADO,GAEP,6GAJJ;AAKEC,EAAAA,KAAK,EAAE,cALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CA5Pa,EAoQb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,2EACP,IADO,GAEP,uCAFO,GAGP,gDAHO,GAIP,+GANJ;AAOEC,EAAAA,KAAK,EAAE,uBAPT;AAQEC,EAAAA,KAAK,EAAE;AART,CApQa,EA8Qb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,6IAFX;AAGEC,EAAAA,KAAK,EAAE,2BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9Qa,EAoRb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4NAFX;AAGEC,EAAAA,KAAK,EAAE,+BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApRa,EA0Rb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mPACP,IADO,GAEP,+FAJJ;AAKEC,EAAAA,KAAK,EAAE,oCALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CA1Ra,EAkSb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4NAFX;AAGEC,EAAAA,KAAK,EAAE,oBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAlSa,EAwSb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uLAFX;AAGEC,EAAAA,KAAK,EAAE,iDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxSa,EA8Sb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4EACP,IADO,GAEP,iJAFO,GAGP,IAHO,GAIP,mJANJ;AAOEC,EAAAA,KAAK,EAAE,kBAPT;AAQEC,EAAAA,KAAK,EAAE;AART,CA9Sa,EAwTb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,qGAFX;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxTa,EA8Tb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,qMAFX;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9Ta,EAoUb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,EAFX;AAGEC,EAAAA,KAAK,EAAE,0BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApUa,EA0Ub;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8DAFX;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1Ua,EAgVb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,EAFX;AAGEC,EAAAA,KAAK,EAAE,cAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhVa,EAsVb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,6JACP,IADO,GAEP,iFAJJ;AAKEC,EAAAA,KAAK,EAAE,6EALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CAtVa,EA8Vb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4FAFX;AAGEC,EAAAA,KAAK,EAAE,kBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9Va,EAoWb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0XAFX;AAGEC,EAAAA,KAAK,EAAE,kCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApWa,EA0Wb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yIAFX;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1Wa,EAgXb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,2OACP,kEADO,GAEP,wDAFO,GAGP,iCAHO,GAIP,IAJO,GAKP,gJAPJ;AAQEC,EAAAA,KAAK,EAAE,gCART;AASEC,EAAAA,KAAK,EAAE;AATT,CAhXa,EA2Xb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4FAFX;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA3Xa,EAiYb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,uJAFT;AAGEC,EAAAA,KAAK,EAAE,sCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjYa,EAuYb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,kGAFX;AAGEC,EAAAA,KAAK,EAAE,6BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAvYa,EA6Yb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oFAFX;AAGEC,EAAAA,KAAK,EAAE,qCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA7Ya,EAmZb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yLAFX;AAGEC,EAAAA,KAAK,EAAE,oDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnZa,EAyZb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,0FACP,2BADO,GAEP,wBAFO,GAGP,0BAHO,GAIP,IAJO,GAKP,+EAPJ;AAQEC,EAAAA,KAAK,EAAE,gCART;AASEC,EAAAA,KAAK,EAAE;AATT,CAzZa,EAoab;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uQACP,IADO,GAEP,sIAJJ;AAKEC,EAAAA,KAAK,EAAE,2BALT;AAMEC,EAAAA,KAAK,EAAE;AANT,CApaa,EA4ab;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,6BAFX;AAGEC,EAAAA,KAAK,EAAE,iDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA5aa,EAkbb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mGAFX;AAGEC,EAAAA,KAAK,EAAE,WAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAlba,EAwbb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iJAFX;AAGEC,EAAAA,KAAK,EAAE,sBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxba,EA8bb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,qJAFX;AAGEC,EAAAA,KAAK,EAAE,kEAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9ba,EAocb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,EAFX;AAGEC,EAAAA,KAAK,EAAE,oDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApca,EA0cb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iTAFX;AAGEC,EAAAA,KAAK,EAAE,kDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1ca,EAgdb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iLAFX;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhda,EAsdb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oJAFX;AAGEC,EAAAA,KAAK,EAAE,iFAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAtda,EA4db;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iIAFX;AAGEC,EAAAA,KAAK,EAAE,4CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA5da,EAkeb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,2HAFX;AAGEC,EAAAA,KAAK,EAAE,+BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAlea,EAweb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,sJAFX;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxea,EA8eb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mHAFX;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9ea,EAofb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4EAFX;AAGEC,EAAAA,KAAK,EAAE,8CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CApfa,EA0fb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yEAFX;AAGEC,EAAAA,KAAK,EAAE,yCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1fa,EAggBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,gFAFX;AAGEC,EAAAA,KAAK,EAAE,2CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhgBa,EAsgBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8CAFX;AAGEC,EAAAA,KAAK,EAAE,kBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAtgBa,EA4gBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,qOACP,IADO,GAEP,+JAFO,GAGP,IAHO,GAIP,8CAJO,GAKP,IALO,GAMP,qGANO,GAOP,IAPO,GAQP,sHAVJ;AAWEC,EAAAA,KAAK,EAAE,sDAXT;AAYEC,EAAAA,KAAK,EAAE;AAZT,CA5gBa,EA0hBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uHAFX;AAGEC,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1hBa,EAgiBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uGAFX;AAGEC,EAAAA,KAAK,EAAE,kCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhiBa,EAsiBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,+FAFX;AAGEC,EAAAA,KAAK,EAAE,kCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAtiBa,EA4iBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,wLAFX;AAGEC,EAAAA,KAAK,EAAE,kBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA5iBa,EAkjBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8GAFX;AAGEC,EAAAA,KAAK,EAAE,2BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAljBa,EAwjBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,kJAFX;AAGEC,EAAAA,KAAK,EAAE,wCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxjBa,EA8jBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,yDAFX;AAGEC,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9jBa,EAokBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,eACP,+HADO,GAEP,IAFO,GAGP,sBAHO,GAIP,sEAJO,2GAFX;AAQEC,EAAAA,KAAK,EAAE,gDART;AASEC,EAAAA,KAAK,EAAE;AATT,CApkBa,EA+kBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,8HAFX;AAGEC,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA/kBa,EAqlBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,kRAFT;AAGEC,EAAAA,KAAK,EAAE,yDAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CArlBa,EA2lBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4GAFX;AAGEC,EAAAA,KAAK,EAAE,oBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA3lBa,EAimBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,uDAFX;AAGEC,EAAAA,KAAK,EAAE,oBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAjmBa,EAumBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oKAFX;AAGEC,EAAAA,KAAK,EAAE,iBAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAvmBa,EA6mBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,+EACP,sIADO,GAEP,iOAFO,GAGP,6UALJ;AAMEC,EAAAA,KAAK,EAAE,6DANT;AAOEC,EAAAA,KAAK,EAAE;AAPT,CA7mBa,EAsnBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mQAFX;AAGEC,EAAAA,KAAK,EAAE,kCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAtnBa,EA4nBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,6GAFX;AAGEC,EAAAA,KAAK,EAAE,qCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA5nBa,EAkoBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,wIAFX;AAGEC,EAAAA,KAAK,EAAE,4BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAloBa,EAwoBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,mGAFX;AAGEC,EAAAA,KAAK,EAAE,+DAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAxoBa,EA8oBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,gHAFX;AAGEC,EAAAA,KAAK,EAAE,iCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA9oBa,EAopBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,4WAFX;AAGEC,EAAAA,KAAK,EAAE,oCAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAppBa,EA0pBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,iOAFX;AAGEC,EAAAA,KAAK,EAAE,+CAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA1pBa,EAgqBb;AACEH,EAAAA,OAAO,EAAE,0BADX;AAEEC,EAAAA,OAAO,EAAE,oTAFX;AAGEC,EAAAA,KAAK,EAAE,6BAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAhqBa,C",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/data/",
      "sourcesContent": [
        "export default [\n  {\n    created: '2016-03-07T05:24:40.340Z',\n    details: 'Right now we only support single backticks. Would be nice to do triple as well... Consider supporting more or all of markdown but I\\'m not sure that\\'s the right direction.',\n    title: 'Support triple backtick codeblocks',\n    votes: 17,\n  },\n  {\n    created: '2016-03-31T14:31:15.222Z',\n    details: 'Maybe using some tool that allows the community to work on the translations.',\n    title: 'Translate into different languages',\n    votes: 46,\n  },\n  {\n    created: '2016-04-05T16:47:55.487Z',\n    details: 'Allow video attachments because sometimes a single photo isn\\'t enough to explain the issue.',\n    title: 'Video attachments',\n    votes: 20,\n  },\n  {\n    created: '2016-04-30T19:10:37.058Z',\n    details: 'When realising that their post actually doesn\\'t make much sense, the only option users have to get rid of it is deleting the post. This is not optimal, since then other users might be submitting that again even though it was posted before!\\n' +\n      '\\n' +\n      'It\\'d be great if users could close their own posts.',\n    title: 'Allow users to mark their own posts as \"Closed',\n    votes: 21,\n  },\n  {\n    created: '2016-06-15T19:09:34.244Z',\n    details: 'Would be nice to have instant or hourly email notifications to help us be more responsive with our users.',\n    title: 'Instant email notifications',\n    votes: 19,\n  },\n  {\n    created: '2016-08-03T23:29:18.588Z',\n    details: 'Teams responding to posts are a great way to show users they\\'re listening. Sometimes posts get lost and end up not being responded to. It would be great to have a section in the dashboard with unanswered posts ranked by number of upvotes.',\n    title: 'Unanswered posts reminders',\n    votes: 49,\n  },\n  {\n    created: '2017-02-10T01:14:54.330Z',\n    details: 'A native widget would feel a lot better than loading a web view. If we can do this with single sign-on, the experience would be super seamless.\\n' +\n      '\\n' +\n      'We\\'d probably start with iOS — something like this:',\n    title: 'Native Mobile Widget',\n    votes: 81,\n  },\n  {\n    created: '2017-03-06T10:39:31.283Z',\n    details: 'Could use IP to deduplicate votes',\n    title: 'Allow posting without registering',\n    votes: 31,\n  },\n  {\n    created: '2017-03-15T06:56:57.748Z',\n    details: 'I can see many features which are worthless to this super product. Please, please do not follow every idea :(\\n' +\n      '\\n' +\n      'I want to down vote all those Nice to have ideas.',\n    title: 'Downvote',\n    votes: 32,\n  },\n  {\n    created: '2017-03-20T00:12:52.784Z',\n    details: 'Expose a single signed on user\\'s notifications via API so they can be integrated into the parent\\'s site.',\n    title: 'Notifications integration',\n    votes: 11,\n  },\n  {\n    created: '2017-03-20T21:17:28.035Z',\n    details: `To avoid people just up-voting because it's \"cool\" and resulting in non-essential features, allow for \"types\" of votes like: \"I need this\" or \"I want this\" or \"This is cool`,\n    title: 'Vote Types - Sentiment',\n    votes: 33,\n  },\n  {\n    created: '2017-03-21T02:16:55.725Z',\n    details: 'As a board owner, I want to create  a board that either anonymizes end users such that they are not aware of each other, or allows an end user to anonymize themselves.\\n' +\n      '\\n' +\n      'This would function similar to the way that public google docs/sheets anonymize the viewers. \"Anonymous Armadillo',\n    title: 'Anonymized Boards',\n    votes: 17,\n  },\n  {\n    created: '2017-03-26T22:14:50.496Z',\n    details: 'Change users\\' email/name on their behalf, or use updated email/name from SSO token automatically',\n    title: 'Ability to manage users',\n    votes: 27,\n  },\n  {\n    created: '2017-03-29T18:04:51.086Z',\n    details: 'I constantly have to switch back to Admin View on my product. If I click the Canny logo to go back to my product\\'s main page, it switches back to Public View. Also, clicking from an email notification switches to Public View. \\n' +\n      '\\n' +\n      'To be honest, I see no value in Public View, so it\\'s a bit strange to me that it switches out of Admin View on my own product.',\n    title: 'Default to Admin View',\n    votes: 15,\n  },\n  {\n    created: '2017-04-06T17:38:41.525Z',\n    details: 'Limit the number of votes a user gets (say, 10-15 votes). As features are changed to Complete, give them those votes back to use on other features. I think this would really help surface the top features when people have to be more picky about the things they vote on.',\n    title: 'Limit the Number of Votes Someone Gets',\n    votes: 72,\n  },\n  {\n    created: '2017-04-18T08:05:48.418Z',\n    details: 'It would be nice to add support for markup so you could create **bold**, *italic* text, headings, * Lists and --- dividers. ✌🏻',\n    title: 'Possibility to use markup',\n    votes: 13,\n  },\n  {\n    created: '2017-05-05T23:46:51.785Z',\n    details: 'Would love to be able to post a comment or a post with options/ideas, even screenshots of how we think about solving the feature request. Then for the people who want that feature can give more direct feedback on which version they might like and also have the ability to comment why they picked that option. \\n' +\n      '\\n' +\n      'Example: \"Folders in lists\" is a popular feature for us. But we have a few ways of thinking about folders for lists in WeDo. Would be great to ask our users in a simple poll, \"Which design do you like the most, and why?\" \\n' +\n      '\\n' +\n      'Yes, this can be done in comments and attaching photos. But the less steps it takes for someone to voice their feedback/opinion the more likely we\\'d see it. If it could just be a one click vote, optional comment. Love that.',\n    title: 'Polls',\n    votes: 18,\n  },\n  {\n    created: '2017-05-16T23:40:55.835Z',\n    details: 'Similar to https://feedback.canny.io/feature-requests/p/being-able-to-vote-on-behalf-of-your-users, except for creating posts.',\n    title: 'Be able to post on behalf of your users',\n    votes: 68,\n  },\n  {\n    created: '2017-05-27T17:39:53.747Z',\n    details: 'It would be useful for keeping track of overall progress made on posts.',\n    title: 'Post count for each status',\n    votes: 11,\n  },\n  {\n    created: '2017-06-02T21:23:22.712Z',\n    details: 'So it plays nicely with a dark background.',\n    title: 'Widget dark theme',\n    votes: 35,\n  },\n  {\n    created: '2017-06-23T18:09:45.204Z',\n    details: 'I\\'d love to be able to close voting/commenting on a post + maybe hide it from users to keep our list of posts cleaner.',\n    title: 'A way to hide posts',\n    votes: 11,\n  },\n  {\n    created: '2017-07-18T21:05:14.338Z',\n    details: 'Add ability to merge users that were created via the \"Add Voter\" form in Admin View.',\n    title: 'Merge Users',\n    votes: 14,\n  },\n  {\n    created: '2017-07-31T07:06:37.543Z',\n    details: 'We regularly have users replying to Canny\\'s notification emails, which sends the reply email to you. While you guys have been great about forwarding these on, it would be better to either include our email as the Reply-To address in the notification email, or to have the reply added automatically to the post.',\n    title: 'Reply to notification email to post',\n    votes: 13,\n  },\n  {\n    created: '2017-08-02T20:59:25.943Z',\n    details: 'Currently, tags are only available for team admins. Users should be able see them as well.',\n    title: 'Allow certain tags to be made public',\n    votes: 117,\n  },\n  {\n    created: '2017-09-18T06:45:59.371Z',\n    details: 'A major issue often results in a lot of duplicate posts in a short time. Would be nice to have a banner that we can use to make major announcements / provide updates. Eg \\'We are aware of issue X - a fix will be available in Y hours\\'. Could potentially do this via sticky / pinned posts as well.',\n    title: 'Banner for major announcements',\n    votes: 17,\n  },\n  {\n    created: '2017-09-22T01:09:34.616Z',\n    details: 'Allow outgoing emails to be branded with company email domain vs canny.io.  Have SPF/DKIM settings for deliverability.',\n    title: 'Custom email domain for outgoing emails',\n    votes: 60,\n  },\n  {\n    created: '2017-10-17T06:27:31.145Z',\n    details: 'Receive email when a item I have created or voted on is commented on.',\n    title: 'Email notification',\n    votes: 12,\n  },\n  {\n    created: '2017-11-11T22:48:26.392Z',\n    details: 'Currently you can only search for terms in the original post, not in the comments. Would be great to have the option to search either or both, so that you can find important terms wherever they get posted.',\n    title: 'Search for terms in both title and comments',\n    votes: 51,\n  },\n  {\n    created: '2017-11-14T07:33:54.765Z',\n    details: 'Would be great if we could filter notifications by:\\n' +\n      '\\n' +\n      '-Post creations\\n' +\n      '-Mentions\\n' +\n      '-Comments\\n' +\n      '-Votes\\n' +\n      '\\n' +\n      'This is especially useful if:\\n' +\n      '\\n' +\n      '-Notifications volume is high\\n' +\n      '-There\\'s more than one admin\\n' +\n      '-Each admin would like to isolate their own mentions first, to be able to prioritize follow-ups',\n    title: 'Filter notifications',\n    votes: 18,\n  },\n  {\n    created: '2017-11-16T02:23:46.465Z',\n    details: 'I know you guys offer a 14 day free trial, but a cheaper or free hobbyist tier with some QOL features cut would be great.\\n' +\n      '\\n' +\n      'I really like this project, but I can\\'t justify spending $50 a month as a hobbyist.\\n' +\n      '\\n' +\n      'I suppose your target demographic is probably businesses, rather than individuals or small teams.',\n    title: 'Early-stage startup discount, cheap plan, or free tier',\n    votes: 16,\n  },\n  {\n    created: '2017-12-03T06:35:56.226Z',\n    details: 'We currently have 10 boards and each day we delete/merge different posts across these boards. When dug deeper, found that when creating a post, the current board is search and not all of them.',\n    title: 'Global search all boards to avoid duplicates',\n    votes: 70,\n  },\n  {\n    created: '2017-12-11T18:20:02.814Z',\n    details: 'If you\\'ve set up feedback.yoursite.com, we should 301 redirect yoursite.canny.io there.',\n    title: 'Redirect Canny subdomain to custom domain',\n    votes: 51,\n  },\n  {\n    created: '2018-01-07T21:54:56.060Z',\n    details: 'Allow admin to define default visibility (public, unlisted, private) for new posts in a board. Also allow changing post visibility, so you can use it as a moderation feature.',\n    title: 'Post visibility and moderation',\n    votes: 18,\n  },\n  {\n    created: '2018-01-10T02:52:00.242Z',\n    details: 'This would be helpful for adding feature releases and batching multiple features together. For example, if a company has multiple products or high-level components that contain a variety features, related or otherwise.',\n    title: 'Additional hierarchy layer, i.e. sub boards',\n    votes: 19,\n  },\n  {\n    created: '2018-01-15T20:01:57.845Z',\n    details: 'Add the possibility to select only few boards on \"Roadmap\" screen.',\n    title: 'Filter the roadmap by board/category/tag',\n    votes: 65,\n  },\n  {\n    created: '2018-01-16T22:06:22.541Z',\n    details: 'I absolutely love the new Roadmap view, but my one critique is that I feel like it doesn\\'t scale well when you have a lot of items. \\n' +\n      '\\n' +\n      'IMO, I feel like the design feels really squished, and the scrolling-within boxes feels  awkward. If the items line up with the bottom of the box, you might not even realize that it\\'s scrollable. \\n' +\n      '\\n' +\n      'It\\'s not entirely clear how many items are on each list (a total count would be great too!)\\n' +\n      '\\n' +\n      'It seems like it would work much better if all three lists just flowed naturally down the page rather than scrolling within their own boxes.',\n    title: 'Make Roadmap scale better for lots of posts',\n    votes: 20,\n  },\n  {\n    created: '2018-01-24T05:20:48.164Z',\n    details: 'Our users keep asking us for the same things over and over. What I usually do, I redirect them to the official Canny thread by sending them links. \\n' +\n      '\\n' +\n      'It would be cool as an admin If I can pin these questions in one board and use it as an FAQ on our website.',\n    title: 'Pinned posts',\n    votes: 13,\n  },\n  {\n    created: '2018-01-25T19:55:01.890Z',\n    details: 'Certain customers have mentioned issues with fake accounts / voters.\\n' +\n      '\\n' +\n      'Some ideas to prevent these issues:\\n' +\n      '– Add a toggle to disable sign up via email.\\n' +\n      '– If more than 1 non-oauth signup from the same IP is detected within 24 hours, make them fill out a captcha.',\n    title: 'Prevent fake accounts',\n    votes: 21,\n  },\n  {\n    created: '2018-02-19T09:00:29.182Z',\n    details: 'If a user views feedback.yoursite.com, there should be a link somewhere back to yoursite.com, so they can get back to the main application.',\n    title: 'Link back to main website',\n    votes: 27,\n  },\n  {\n    created: '2018-03-05T20:31:12.896Z',\n    details: 'I\\'d like feature requests/bugs to be flagged that hit a certain threshold of similarity. Our users are doing a very light check for duplicates at best and it\\'d be great to have some flagged for the admins to resolve.',\n    title: 'Flag Similar Feature Requests',\n    votes: 21,\n  },\n  {\n    created: '2018-03-12T19:50:46.860Z',\n    details: 'Sometimes I want to attach more than just an image to help my users see the issue. Sometimes a PDF with some larger details would be easier to show. Sometimes a video (see https://feedback.canny.io/feature-requests/p/video-attachments).\\n' +\n      '\\n' +\n      'Being able to do this would also allow the community to serve as a an ad-hoc support service.',\n    title: 'Be able to attach other file types',\n    votes: 40,\n  },\n  {\n    created: '2018-03-26T13:16:33.716Z',\n    details: 'I see there\\'s another post on this for tags. It\\'d be immensely helpful to have these for Categories given they\\'re externally-facing. If not reordering, some way to sort either alphabetically or by # of posts within.',\n    title: 'Reorder Categories',\n    votes: 15,\n  },\n  {\n    created: '2018-04-02T15:32:11.586Z',\n    details: 'Give the ability to weight requests (say impact & effort, or customizable).  This will allow users to prioritize their list of requests.  Bonus points for displaying it on a matrix.',\n    title: 'Ability for admins to weigh/prioritize requests',\n    votes: 72,\n  },\n  {\n    created: '2018-04-04T16:10:46.839Z',\n    details: 'It would be great to be able to set the order in the roadmap column? \\n' +\n      '\\n' +\n      'I\\'m fairly confident our users would assume there\\'s an order of implementation implied by the order (and we\\'d like to be able to do that).\\n' +\n      '\\n' +\n      'Would a drag and drop option be possible? Failing that shorting alphabetically so we can do a \\'a) Feature X\\', \\'b. Feature Y\\' type workaround?',\n    title: 'Roadmap Ordering',\n    votes: 41,\n  },\n  {\n    created: '2018-04-13T12:47:52.549Z',\n    details: 'It would be great if we could also embed the roadmap via a widget just like we can with the boards.',\n    title: 'Roadmap widget',\n    votes: 99,\n  },\n  {\n    created: '2018-05-21T16:06:33.689Z',\n    details: 'Let us customize the names of the statuses. Specifically I want to change \"Under Review\" to \"Researching\" or \"Scoping\".  \"Under Review\" sounds like the post is under review and might get deleted.',\n    title: 'Custom Statuses',\n    votes: 304,\n  },\n  {\n    created: '2018-05-28T04:41:31.325Z',\n    details: '',\n    title: 'Remove \"Powered by Canny',\n    votes: 180,\n  },\n  {\n    created: '2018-06-06T17:16:25.120Z',\n    details: 'I would like to be able to edit or delete the merged comment',\n    title: 'Edit/Delete Merged Comment',\n    votes: 28,\n  },\n  {\n    created: '2018-06-15T14:05:21.548Z',\n    details: '',\n    title: 'Export users',\n    votes: 39,\n  },\n  {\n    created: '2018-06-15T15:16:22.084Z',\n    details: 'While scanning Canny, it\\'s hard to tell which posts are linked to Jira and which aren\\'t. It takes too much effort to click into every post to check.\\n' +\n      '\\n' +\n      'Showing whether the post is linked in the post list view makes this way easier.',\n    title: 'Show whether a Canny post is linked to a Jira issue from the post list view',\n    votes: 12,\n  },\n  {\n    created: '2018-07-17T23:32:37.974Z',\n    details: 'Add a privacy setting so that user comments can only be seen by the team, not other users.',\n    title: 'Private Comments',\n    votes: 26,\n  },\n  {\n    created: '2018-07-23T15:52:51.041Z',\n    details: 'I\\'d like to share some public information for people viewing and using our board.  But, currently it looks like if the Public view is turned on then it displays full names and organizations from Intercom.  For confidentiality purposes I had to turn off public since it included full names and orgs.  It would be helpful to have an option to only publicly display first names.',\n    title: 'Hide last names from public view',\n    votes: 22,\n  },\n  {\n    created: '2018-07-31T03:13:06.343Z',\n    details: 'We would rather only use the voting ability and disable the ability for users to submit posts. Posts would be submitted by admins only.',\n    title: 'Option to disable user submissions/new posts',\n    votes: 25,\n  },\n  {\n    created: '2018-08-13T18:05:26.154Z',\n    details: 'In addition to a title and details field, allow admins to add additional custom fields. In another setting where we use Aha to collect feedback from customer-facing teams, we have custom fields to prompt specific questions like:\\n' +\n      '- how would this help solve a customer\\'s problem? (text area)\\n' +\n      '- what is the relevant product area? (single select)\\n' +\n      '- steps to reproduce the bug?\\n' +\n      '\\n' +\n      'These Qs might be too much for a customer-facing feedback site, but they\\'re super useful for discussing and sorting through ideas internally.',\n    title: 'Customize the create post form',\n    votes: 81,\n  },\n  {\n    created: '2018-08-14T17:11:21.863Z',\n    details: 'Instead of send updates via email, send them through the original conversation on Intercom',\n    title: 'Send status updates back through Intercom',\n    votes: 14,\n  },\n  {\n    created: '2018-08-24T19:16:32.550Z',\n    details: `When searching for a voter to add a vote on their behalf, we do a prefix search. This means \"John\" matches \"John Smith\", but \"Smith\" doesn't.`,\n    title: 'Search for users/voters by last name',\n    votes: 43,\n  },\n  {\n    created: '2018-08-25T00:15:04.205Z',\n    details: 'Allow customers to give us their Intercom app ID so we can so the messenger on their Canny site.',\n    title: 'Show intercom on canny site',\n    votes: 11,\n  },\n  {\n    created: '2018-08-28T22:50:10.424Z',\n    details: 'Send posts to an approval queue. Admins can decide if they want to make it public.',\n    title: 'Approve posts before they go public',\n    votes: 94,\n  },\n  {\n    created: '2018-08-31T18:53:53.440Z',\n    details: 'We\\'d like to get more options than just changing the tint colour. Something like setting a solid colour across the top of the screen, or changing navigation menu colours, fonts, etc.',\n    title: 'Allow more styling options (colours, font\\'s, etc)',\n    votes: 10,\n  },\n  {\n    created: '2018-09-10T10:08:02.341Z',\n    details: 'It would be great to be able to create your own roadmap view: I\\'d like to define: \\n' +\n      '* the number of columns\\n' +\n      '* the title for each\\n' +\n      '* the status for each.\\n' +\n      '\\n' +\n      'This would be even more useful if you could create your own statuses as well.',\n    title: 'Create your individual roadmap',\n    votes: 15,\n  },\n  {\n    created: '2018-09-25T05:15:22.403Z',\n    details: 'Since our site is using React (and so is the Canny widget), it\\'d be great to be able to import a Canny component directly from an npm package. This would simplify the integration and allow us to manage the imported JS/CSS the same as the rest of our site.\\n' +\n      '\\n' +\n      '(Happy to email a gist of our current integration if you\\'re interested - a few workarounds to show progress while the widget loads)',\n    title: 'Widget as React component',\n    votes: 13,\n  },\n  {\n    created: '2018-10-04T14:37:05.721Z',\n    details: 'For example, monthly spend.',\n    title: 'Add weight to votes based on customer attribute',\n    votes: 13,\n  },\n  {\n    created: '2018-11-16T16:13:15.434Z',\n    details: 'Nice to have - ability to bulk edit posts e.g. change category, tags, statuses, change board etc.',\n    title: 'Bulk edit',\n    votes: 29,\n  },\n  {\n    created: '2018-11-16T22:38:06.719Z',\n    details: 'For people who add votes on behalf of their users but didn\\'t initially add their email address. They should be able to add one after the fact.',\n    title: 'Add/edit voter email',\n    votes: 13,\n  },\n  {\n    created: '2018-11-20T14:17:20.225Z',\n    details: 'Have a configuration option to prevent upvotes after a feature has been concluded (closed or completed) or make the completed state more prominent.',\n    title: 'Turn off ability to upvote for completed/closed feature requests',\n    votes: 55,\n  },\n  {\n    created: '2018-11-30T21:45:20.378Z',\n    details: '',\n    title: 'Ability to see categories in Intercom app selector',\n    votes: 16,\n  },\n  {\n    created: '2018-12-19T21:44:16.323Z',\n    details: 'I\\'m currently unable to tell if a bug that was voted for a lot a long time ago is still gaining a lot of votes. It\\'s hard to keep track of what each submission\\'s votes were last time. It would be useful if cards had a way to show me like a line graph of the votes for each day/week on the admin view.',\n    title: 'Post analytics (vote acceleration, clicks/views)',\n    votes: 14,\n  },\n  {\n    created: '2019-02-26T17:32:03.520Z',\n    details: 'Our users want to filter for ideas they submitted, not just voted on. They take a lot of pride in being the genesis for these ideas. This has a number of votes from our users.',\n    title: 'Filter for Own Ideas in Addition to Votes',\n    votes: 32,\n  },\n  {\n    created: '2019-03-11T23:15:23.863Z',\n    details: 'When I receive an email notification about \\'Canny\\' I get confused and think the request is about my product, the emails I get are quite similar.',\n    title: 'Bigger distinction between emails about Canny and emails relating to my product',\n    votes: 10,\n  },\n  {\n    created: '2019-04-11T21:59:59.410Z',\n    details: 'Could be time based (ex. 3 days, 1 month) or simply how difficult it is (ex. hard, easy). This will help set user expectations.',\n    title: 'Signal for how easy/difficult something is',\n    votes: 11,\n  },\n  {\n    created: '2019-04-25T15:49:21.139Z',\n    details: 'Sometimes a comment really refers to something separate. It\\'d be nice if admins could upgrade a comment into a new post.',\n    title: 'Upgrade a comment into a post',\n    votes: 21,\n  },\n  {\n    created: '2019-05-02T18:46:45.237Z',\n    details: 'I would like to have a board template so I can use the same settings for sections like \"Create Post Form\", \"Privacy\", and \"Tags\" for all new boards.',\n    title: 'Board Template',\n    votes: 17,\n  },\n  {\n    created: '2019-06-12T04:03:20.009Z',\n    details: 'It would be great if you had a full page changelog widget rather than having to click a button to show a popover.',\n    title: 'Full page changelog widget',\n    votes: 26,\n  },\n  {\n    created: '2019-06-26T06:51:46.462Z',\n    details: 'Something people can opt into to receive emails about new product changes.',\n    title: 'Email notification for new changelog entries',\n    votes: 21,\n  },\n  {\n    created: '2019-06-26T13:28:41.323Z',\n    details: 'Allow people to chime in with feedback and praise on changelog entries.',\n    title: 'Feedback/reactions on changelog entries',\n    votes: 17,\n  },\n  {\n    created: '2019-07-01T20:46:32.047Z',\n    details: 'Would be awesome if we supported a messenger home app with the latest changes.',\n    title: 'Changelog messenger home app for Intercom',\n    votes: 23,\n  },\n  {\n    created: '2019-07-01T20:47:30.318Z',\n    details: 'Allow people to search for changelog entries',\n    title: 'Changelog search',\n    votes: 13,\n  },\n  {\n    created: '2019-07-05T12:57:39.619Z',\n    details: 'It would be really nice if you could link Feedback Items to a Changelog Entry. Sure, you could find the feedback, copy the URL, and add a link to it in the entry, but I\\'m looking for something more convenient and two way.\\n' +\n      '\\n' +\n      'With my use case, you should be able to link multiple feedback items to a single entry. And the feedback item should have a link back to the entry as well.\\n' +\n      '\\n' +\n      'Here is what my basic release workflow is:\\n' +\n      '\\n' +\n      '1. When I\\'m done with a feedback item, I mark it as complete (but it hasn\\'t been released yet).\\n' +\n      '\\n' +\n      '2. Once I release the version with the feedback item, I create a changelog entry highlighting the important changes.',\n    title: 'Show linked feedback items in public changelog entry',\n    votes: 15,\n  },\n  {\n    created: '2019-07-22T18:25:31.974Z',\n    details: 'Be able to like a changelog post in the app, and maybe see it\\'s traction on social media, like, tweets, shares, etc.',\n    title: 'Likes for Changelog',\n    votes: 33,\n  },\n  {\n    created: '2019-07-29T02:32:50.918Z',\n    details: 'A lot of data is in Intercom already so we should be able to pull fields from there for segmentation.',\n    title: 'Pull custom fields from Intercom',\n    votes: 10,\n  },\n  {\n    created: '2019-08-09T15:31:48.589Z',\n    details: 'Currently it is not possible to create an internal comment via the API, only public comments.',\n    title: 'Create internal comments via API',\n    votes: 23,\n  },\n  {\n    created: '2019-08-13T10:20:59.572Z',\n    details: 'My Customers are not from tech industry and hence will not understand the term \\'Changelog\\' . A better name can be \\'Product Updates\\' . Please make the Changelog text customisable.',\n    title: 'Rename Changelog',\n    votes: 13,\n  },\n  {\n    created: '2019-08-23T15:46:14.448Z',\n    details: 'The new UI is causing problems for many tag members. Having all tags displayed helps ensure none are missed.',\n    title: 'Revert Back to Old Tag UI',\n    votes: 21,\n  },\n  {\n    created: '2019-09-03T13:49:02.791Z',\n    details: 'Boards may be created for different products and it would be helpful to assign boards to a changelog rather than a single log across all boards.',\n    title: 'Changelog specific to certain board(s)',\n    votes: 12,\n  },\n  {\n    created: '2019-09-09T02:36:58.340Z',\n    details: 'Ability to see how many people viewed a changelog post.',\n    title: 'Changelog Analytics',\n    votes: 11,\n  },\n  {\n    created: '2019-09-09T20:33:08.701Z',\n    details: 'Problem:\\n' +\n      'I am lazy, and would like my completed posts (e.g. a feature request) to be easily or automatically added to the Changelog.\\n' +\n      '\\n' +\n      'Possible solution:\\n' +\n      '- Add an admin button (e.g. \"Show in Changelog\") to existing posts\\n' +\n      `- Clicking the button shows the \"New Changelog entry\" form filled out with the existing post's data.`,\n    title: 'Create a Changelog entry from an existing post',\n    votes: 10,\n  },\n  {\n    created: '2019-09-24T18:01:51.078Z',\n    details: 'Teams would like a nice overview of what\\'s happening in Canny. Let us know what specific data you\\'re interested in seeing!',\n    title: 'Reporting/analytics',\n    votes: 41,\n  },\n  {\n    created: '2019-10-08T09:50:21.058Z',\n    details: `Rather than just show my name in the comments section when replying to customers, also show my title. It's great if our customers know they're speaking with either a \"Product Manager\" or a \"Customer Success\" person etc. Your role could just be added to your profile.`,\n    title: 'Show job role so customers know who\\'s replying to them',\n    votes: 15,\n  },\n  {\n    created: '2019-10-16T00:13:10.456Z',\n    details: 'Add a Recently Completed section to the Roadmap view to show posts that were recently marked as completed.',\n    title: 'Recently Completed',\n    votes: 41,\n  },\n  {\n    created: '2019-11-12T17:39:29.038Z',\n    details: 'So our customers\\' customers can subscribe to changes',\n    title: 'Changelog RSS feed',\n    votes: 15,\n  },\n  {\n    created: '2019-11-21T18:38:00.003Z',\n    details: 'Nice to have, but I like being able to link out to / reference e.g. \"Idea-123\". Similar to referencing \"JIRA-456\", it makes communication much easier and clearer.',\n    title: 'Integer Post ID',\n    votes: 12,\n  },\n  {\n    created: '2020-01-31T09:11:44.504Z',\n    details: 'I have a few suggestions for how to improve the \\'Stale posts\\' feature.\\n' +\n      'Suggestion #1 –– When I have no stale posts it uses a lot of screen estate on the /admin view. I would rather just see my roadmap.\\n' +\n      'Suggestion #2 –– Update \\'stale posts\\' whenever a new comment or edit is made by an admin, not just on \\'status\\' change. That would make a lot of our features go out of \\'stale\\' mode when we can\\'t change their status.\\n' +\n      'Suggestion #3 –– If suggestion #2 isn\\'t an option, then make it possible to disable \\'Stale posts\\'. It\\'s not very encouraging getting emails every day that you have 3 features that are \\'stale\\' with red text saying they\\'re \\'6 weeks\\' old. We\\'re often working on big features that can take more than 4 weeks to change status.',\n    title: 'Suggestions for improvements to the \\'Stale posts\\' feature',\n    votes: 15,\n  },\n  {\n    created: '2020-03-17T15:40:44.635Z',\n    details: 'I\\'d like the owner field to be able to be seen on the public facing side of our board and not just the admin side! This will help our team as they triage bugs / ideas by communicating to the voters and submitters when something has been taken ownership of.',\n    title: 'Display post owner to the public',\n    votes: 10,\n  },\n  {\n    created: '2020-04-23T21:30:03.569Z',\n    details: 'It will be cool to be able to edit the information of an user already created. Like his email and his name.',\n    title: 'Being able to rename and edit users',\n    votes: 46,\n  },\n  {\n    created: '2020-06-08T16:05:20.225Z',\n    details: 'My users want to help us out, and suggest some posts to be merged. At our scale, this would be quite tough to manage through comments.',\n    title: 'Suggest posts to be merged',\n    votes: 15,\n  },\n  {\n    created: '2020-06-16T14:33:03.389Z',\n    details: 'When creating a Post from Slack default the \"Customer\" field to the Slack user creating the Post.',\n    title: 'Default to current user in Slack integration on post creation',\n    votes: 17,\n  },\n  {\n    created: '2020-08-11T13:19:57.058Z',\n    details: 'Right now, the changelog is either fully internal or fully external. It would be nice to be able to have both.',\n    title: 'Internal and external changelog',\n    votes: 10,\n  },\n  {\n    created: '2020-09-01T19:03:43.278Z',\n    details: 'It would be helpful to be able to preview the rendered Markdown in posts/comments, especially considering the [supported syntax](https://feedback.canny.io/feature-requests/p/markdown-editing-for-posts) is more limited than traditional Markdown. It would help avoid the mistake of using unsupported syntax, like underscores instead of asterisks to italicize text.',\n    title: 'Preview Markdown in posts/comments',\n    votes: 10,\n  },\n  {\n    created: '2020-11-27T10:42:06.854Z',\n    details: 'I installed the Canny Jira App and as a result it\\'s shown on every Jira project of our organization. Could you do something like the Issue Free Checklist App that you can choose the project on which to activate it? Thanks!',\n    title: 'Activate Canny Jira App only on some projects',\n    votes: 25,\n  },\n  {\n    created: '2020-12-18T08:50:26.899Z',\n    details: 'Would be great to give an Admin the option to mark a feature request as \"open for early adopters\" and give customers/users/people the ability to request inclusion in a Beta / Early Adopter program. This would reduce time spent looking for and recruiting for this stage of the product development lifecycle.',\n    title: 'Beta / Early Adopter Opt-In',\n    votes: 22,\n  },\n];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/utils/validateInput.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/utils/validateInput.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/utils/validateInput.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/utils/validateInput.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
        "sourceFileName": "validateInput.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar validateInput = {\n  validate: function validate(format, data) {\n    for (var key in format) {\n      var entry = format[key];\n      var validator;\n\n      if (_typeof(entry) === 'object') {\n        if (entry.nullable) {\n          if (data[key] === undefined || data[key] === null) {\n            continue;\n          }\n        }\n\n        if (typeof entry[\"default\"] !== 'undefined') {\n          if (typeof data[key] === 'undefined') {\n            data[key] = entry[\"default\"];\n          }\n        }\n\n        validator = entry.validator;\n      } else if (typeof entry === 'function') {\n        validator = entry;\n      } else {\n        return 'malformed validation entry';\n      }\n\n      if (!validator(data[key])) {\n        return 'Value \"' + data[key] + '\" for key \"' + key + '\" is invalid';\n      }\n    }\n\n    return null;\n  },\n  email: function email(_email) {\n    if (typeof _email !== 'string') {\n      return false;\n    }\n\n    if (_email.length < 5 || _email.length > 200) {\n      return false;\n    }\n\n    var regex = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.([a-z]+)|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\n    return !!_email.match(regex);\n  },\n  integer: function integer(value) {\n    if (typeof value !== 'number' && typeof value !== 'string') {\n      return false;\n    }\n\n    var n = Number(value);\n    return Number.isInteger(n) && n >= 0;\n  },\n  oneOf: function oneOf(array) {\n    return function (value) {\n      for (var i = 0; i < array.length; i++) {\n        var item = array[i];\n\n        if (item === value) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n};\nvar _default = validateInput;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlSW5wdXQuanMiXSwibmFtZXMiOlsidmFsaWRhdGVJbnB1dCIsInZhbGlkYXRlIiwiZm9ybWF0IiwiZGF0YSIsImtleSIsImVudHJ5IiwidmFsaWRhdG9yIiwibnVsbGFibGUiLCJ1bmRlZmluZWQiLCJlbWFpbCIsImxlbmd0aCIsInJlZ2V4IiwibWF0Y2giLCJpbnRlZ2VyIiwidmFsdWUiLCJuIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwib25lT2YiLCJhcnJheSIsImkiLCJpdGVtIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFNQSxhQUFhLEdBQUc7QUFDcEJDLEVBQUFBLFFBQVEsRUFBRSxrQkFBU0MsTUFBVCxFQUFpQkMsSUFBakIsRUFBdUI7QUFDL0IsU0FBSyxJQUFJQyxHQUFULElBQWdCRixNQUFoQixFQUF3QjtBQUN0QixVQUFJRyxLQUFLLEdBQUdILE1BQU0sQ0FBQ0UsR0FBRCxDQUFsQjtBQUNBLFVBQUlFLFNBQUo7O0FBQ0EsVUFBSSxRQUFPRCxLQUFQLE1BQWlCLFFBQXJCLEVBQStCO0FBQzdCLFlBQUlBLEtBQUssQ0FBQ0UsUUFBVixFQUFvQjtBQUNsQixjQUFJSixJQUFJLENBQUNDLEdBQUQsQ0FBSixLQUFjSSxTQUFkLElBQTJCTCxJQUFJLENBQUNDLEdBQUQsQ0FBSixLQUFjLElBQTdDLEVBQW1EO0FBQ2pEO0FBQ0Q7QUFDRjs7QUFDRCxZQUFJLE9BQU9DLEtBQUssV0FBWixLQUF5QixXQUE3QixFQUEwQztBQUN4QyxjQUFJLE9BQU9GLElBQUksQ0FBQ0MsR0FBRCxDQUFYLEtBQXFCLFdBQXpCLEVBQXNDO0FBQ3BDRCxZQUFBQSxJQUFJLENBQUNDLEdBQUQsQ0FBSixHQUFZQyxLQUFLLFdBQWpCO0FBQ0Q7QUFDRjs7QUFDREMsUUFBQUEsU0FBUyxHQUFHRCxLQUFLLENBQUNDLFNBQWxCO0FBQ0QsT0FaRCxNQVlPLElBQUksT0FBT0QsS0FBUCxLQUFpQixVQUFyQixFQUFpQztBQUN0Q0MsUUFBQUEsU0FBUyxHQUFHRCxLQUFaO0FBQ0QsT0FGTSxNQUVBO0FBQ0wsZUFBTyw0QkFBUDtBQUNEOztBQUVELFVBQUksQ0FBQ0MsU0FBUyxDQUFDSCxJQUFJLENBQUNDLEdBQUQsQ0FBTCxDQUFkLEVBQTJCO0FBQ3pCLGVBQU8sWUFBWUQsSUFBSSxDQUFDQyxHQUFELENBQWhCLEdBQXdCLGFBQXhCLEdBQXdDQSxHQUF4QyxHQUE4QyxjQUFyRDtBQUNEO0FBQ0Y7O0FBQ0QsV0FBTyxJQUFQO0FBQ0QsR0E1Qm1CO0FBOEJwQkssRUFBQUEsS0FBSyxFQUFFLGVBQVNBLE1BQVQsRUFBZ0I7QUFDckIsUUFBSSxPQUFPQSxNQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCLGFBQU8sS0FBUDtBQUNEOztBQUVELFFBQUlBLE1BQUssQ0FBQ0MsTUFBTixHQUFlLENBQWYsSUFBb0JELE1BQUssQ0FBQ0MsTUFBTixHQUFlLEdBQXZDLEVBQTRDO0FBQzFDLGFBQU8sS0FBUDtBQUNEOztBQUVELFFBQUlDLEtBQUssR0FBRyw0S0FBWjtBQUNBLFdBQU8sQ0FBQyxDQUFDRixNQUFLLENBQUNHLEtBQU4sQ0FBWUQsS0FBWixDQUFUO0FBQ0QsR0F6Q21CO0FBMkNwQkUsRUFBQUEsT0FBTyxFQUFFLGlCQUFDQyxLQUFELEVBQVc7QUFDbEIsUUFBSSxPQUFPQSxLQUFQLEtBQWlCLFFBQWpCLElBQ0EsT0FBT0EsS0FBUCxLQUFpQixRQURyQixFQUMrQjtBQUM3QixhQUFPLEtBQVA7QUFDRDs7QUFDRCxRQUFJQyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0YsS0FBRCxDQUFkO0FBQ0EsV0FBT0UsTUFBTSxDQUFDQyxTQUFQLENBQWlCRixDQUFqQixLQUF1QkEsQ0FBQyxJQUFJLENBQW5DO0FBQ0QsR0FsRG1CO0FBb0RwQkcsRUFBQUEsS0FBSyxFQUFFLGVBQUNDLEtBQUQ7QUFBQSxXQUFXLFVBQUNMLEtBQUQsRUFBVztBQUMzQixXQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdELEtBQUssQ0FBQ1QsTUFBMUIsRUFBa0NVLENBQUMsRUFBbkMsRUFBdUM7QUFDckMsWUFBTUMsSUFBSSxHQUFHRixLQUFLLENBQUNDLENBQUQsQ0FBbEI7O0FBQ0EsWUFBSUMsSUFBSSxLQUFLUCxLQUFiLEVBQW9CO0FBQ2xCLGlCQUFPLElBQVA7QUFDRDtBQUNGOztBQUNELGFBQU8sS0FBUDtBQUNELEtBUk07QUFBQTtBQXBEYSxDQUF0QjtlQStEZWQsYSIsInNvdXJjZVJvb3QiOiIvaG9tZS9zcmRqYW4vY2hyaXN0aWFuL3NlcnZlci9kZWJ1Zy10ZXN0L3NlcnZlci91dGlscy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB2YWxpZGF0ZUlucHV0ID0ge1xuICB2YWxpZGF0ZTogZnVuY3Rpb24oZm9ybWF0LCBkYXRhKSB7XG4gICAgZm9yICh2YXIga2V5IGluIGZvcm1hdCkge1xuICAgICAgdmFyIGVudHJ5ID0gZm9ybWF0W2tleV07XG4gICAgICB2YXIgdmFsaWRhdG9yO1xuICAgICAgaWYgKHR5cGVvZiBlbnRyeSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKGVudHJ5Lm51bGxhYmxlKSB7XG4gICAgICAgICAgaWYgKGRhdGFba2V5XSA9PT0gdW5kZWZpbmVkIHx8IGRhdGFba2V5XSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgZW50cnkuZGVmYXVsdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGRhdGFba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGRhdGFba2V5XSA9IGVudHJ5LmRlZmF1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhbGlkYXRvciA9IGVudHJ5LnZhbGlkYXRvcjtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGVudHJ5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhbGlkYXRvciA9IGVudHJ5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuICdtYWxmb3JtZWQgdmFsaWRhdGlvbiBlbnRyeSc7XG4gICAgICB9XG5cbiAgICAgIGlmICghdmFsaWRhdG9yKGRhdGFba2V5XSkpIHtcbiAgICAgICAgcmV0dXJuICdWYWx1ZSBcIicgKyBkYXRhW2tleV0gKyAnXCIgZm9yIGtleSBcIicgKyBrZXkgKyAnXCIgaXMgaW52YWxpZCc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9LFxuXG4gIGVtYWlsOiBmdW5jdGlvbihlbWFpbCkge1xuICAgIGlmICh0eXBlb2YgZW1haWwgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKGVtYWlsLmxlbmd0aCA8IDUgfHwgZW1haWwubGVuZ3RoID4gMjAwKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHJlZ2V4ID0gL15bLWEtejAtOX4hJCVeJipfPSt9e1xcJz9dKyhcXC5bLWEtejAtOX4hJCVeJipfPSt9e1xcJz9dKykqQChbYS16MC05X11bLWEtejAtOV9dKihcXC5bLWEtejAtOV9dKykqXFwuKFthLXpdKyl8KFswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM30pKSg6WzAtOV17MSw1fSk/JC9pO1xuICAgIHJldHVybiAhIWVtYWlsLm1hdGNoKHJlZ2V4KTtcbiAgfSxcblxuICBpbnRlZ2VyOiAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnbnVtYmVyJyAmJlxuICAgICAgICB0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHZhciBuID0gTnVtYmVyKHZhbHVlKTtcbiAgICByZXR1cm4gTnVtYmVyLmlzSW50ZWdlcihuKSAmJiBuID49IDA7XG4gIH0sXG5cbiAgb25lT2Y6IChhcnJheSkgPT4gKHZhbHVlKSA9PiB7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgaXRlbSA9IGFycmF5W2ldO1xuICAgICAgaWYgKGl0ZW0gPT09IHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZUlucHV0O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "validateInput.js"
      ],
      "names": [
        "validateInput",
        "validate",
        "format",
        "data",
        "key",
        "entry",
        "validator",
        "nullable",
        "undefined",
        "email",
        "length",
        "regex",
        "match",
        "integer",
        "value",
        "n",
        "Number",
        "isInteger",
        "oneOf",
        "array",
        "i",
        "item"
      ],
      "mappings": ";;;;;;;;;AAAA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,kBAASC,MAAT,EAAiBC,IAAjB,EAAuB;AAC/B,SAAK,IAAIC,GAAT,IAAgBF,MAAhB,EAAwB;AACtB,UAAIG,KAAK,GAAGH,MAAM,CAACE,GAAD,CAAlB;AACA,UAAIE,SAAJ;;AACA,UAAI,QAAOD,KAAP,MAAiB,QAArB,EAA+B;AAC7B,YAAIA,KAAK,CAACE,QAAV,EAAoB;AAClB,cAAIJ,IAAI,CAACC,GAAD,CAAJ,KAAcI,SAAd,IAA2BL,IAAI,CAACC,GAAD,CAAJ,KAAc,IAA7C,EAAmD;AACjD;AACD;AACF;;AACD,YAAI,OAAOC,KAAK,WAAZ,KAAyB,WAA7B,EAA0C;AACxC,cAAI,OAAOF,IAAI,CAACC,GAAD,CAAX,KAAqB,WAAzB,EAAsC;AACpCD,YAAAA,IAAI,CAACC,GAAD,CAAJ,GAAYC,KAAK,WAAjB;AACD;AACF;;AACDC,QAAAA,SAAS,GAAGD,KAAK,CAACC,SAAlB;AACD,OAZD,MAYO,IAAI,OAAOD,KAAP,KAAiB,UAArB,EAAiC;AACtCC,QAAAA,SAAS,GAAGD,KAAZ;AACD,OAFM,MAEA;AACL,eAAO,4BAAP;AACD;;AAED,UAAI,CAACC,SAAS,CAACH,IAAI,CAACC,GAAD,CAAL,CAAd,EAA2B;AACzB,eAAO,YAAYD,IAAI,CAACC,GAAD,CAAhB,GAAwB,aAAxB,GAAwCA,GAAxC,GAA8C,cAArD;AACD;AACF;;AACD,WAAO,IAAP;AACD,GA5BmB;AA8BpBK,EAAAA,KAAK,EAAE,eAASA,MAAT,EAAgB;AACrB,QAAI,OAAOA,MAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAO,KAAP;AACD;;AAED,QAAIA,MAAK,CAACC,MAAN,GAAe,CAAf,IAAoBD,MAAK,CAACC,MAAN,GAAe,GAAvC,EAA4C;AAC1C,aAAO,KAAP;AACD;;AAED,QAAIC,KAAK,GAAG,4KAAZ;AACA,WAAO,CAAC,CAACF,MAAK,CAACG,KAAN,CAAYD,KAAZ,CAAT;AACD,GAzCmB;AA2CpBE,EAAAA,OAAO,EAAE,iBAACC,KAAD,EAAW;AAClB,QAAI,OAAOA,KAAP,KAAiB,QAAjB,IACA,OAAOA,KAAP,KAAiB,QADrB,EAC+B;AAC7B,aAAO,KAAP;AACD;;AACD,QAAIC,CAAC,GAAGC,MAAM,CAACF,KAAD,CAAd;AACA,WAAOE,MAAM,CAACC,SAAP,CAAiBF,CAAjB,KAAuBA,CAAC,IAAI,CAAnC;AACD,GAlDmB;AAoDpBG,EAAAA,KAAK,EAAE,eAACC,KAAD;AAAA,WAAW,UAACL,KAAD,EAAW;AAC3B,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACT,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrC,YAAMC,IAAI,GAAGF,KAAK,CAACC,CAAD,CAAlB;;AACA,YAAIC,IAAI,KAAKP,KAAb,EAAoB;AAClB,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KARM;AAAA;AApDa,CAAtB;eA+Ded,a",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "sourcesContent": [
        "const validateInput = {\n  validate: function(format, data) {\n    for (var key in format) {\n      var entry = format[key];\n      var validator;\n      if (typeof entry === 'object') {\n        if (entry.nullable) {\n          if (data[key] === undefined || data[key] === null) {\n            continue;\n          }\n        }\n        if (typeof entry.default !== 'undefined') {\n          if (typeof data[key] === 'undefined') {\n            data[key] = entry.default;\n          }\n        }\n        validator = entry.validator;\n      } else if (typeof entry === 'function') {\n        validator = entry;\n      } else {\n        return 'malformed validation entry';\n      }\n\n      if (!validator(data[key])) {\n        return 'Value \"' + data[key] + '\" for key \"' + key + '\" is invalid';\n      }\n    }\n    return null;\n  },\n\n  email: function(email) {\n    if (typeof email !== 'string') {\n      return false;\n    }\n\n    if (email.length < 5 || email.length > 200) {\n      return false;\n    }\n\n    var regex = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.([a-z]+)|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\n    return !!email.match(regex);\n  },\n\n  integer: (value) => {\n    if (typeof value !== 'number' &&\n        typeof value !== 'string') {\n      return false;\n    }\n    var n = Number(value);\n    return Number.isInteger(n) && n >= 0;\n  },\n\n  oneOf: (array) => (value) => {\n    for (var i = 0; i < array.length; i++) {\n      const item = array[i];\n      if (item === value) {\n        return true;\n      }\n    }\n    return false;\n  },\n};\n\nexport default validateInput;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/webserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/webserver/HTTPServer.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/webserver/HTTPServer.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/webserver/HTTPServer.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/webserver/HTTPServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
        "sourceFileName": "HTTPServer.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _Request = _interopRequireDefault(require(\"./Request\"));\n\nvar _authenticateUser = _interopRequireDefault(require(\"../utils/authenticateUser\"));\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _url = _interopRequireDefault(require(\"url\"));\n\nvar _validateInput = _interopRequireDefault(require(\"../utils/validateInput\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar HTTPServer = /*#__PURE__*/function () {\n  function HTTPServer(config) {\n    _classCallCheck(this, HTTPServer);\n\n    this._config = config;\n    this._server = null;\n  }\n\n  _createClass(HTTPServer, [{\n    key: \"start\",\n    value: function start() {\n      var requestHandler = this.requestHandler.bind(this);\n      this._server = _http[\"default\"].createServer(requestHandler).listen(8009);\n    }\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._server.close();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n  }, {\n    key: \"requestHandler\",\n    value: function () {\n      var _requestHandler = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(httpRequest, response) {\n        var queryData, request, path, endpoint, error, timestamp;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                queryData = _url[\"default\"].parse(httpRequest.url, true).query;\n                request = new _Request[\"default\"](queryData, httpRequest, response);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return (0, _authenticateUser[\"default\"])(request, queryData);\n\n              case 5:\n                _context2.next = 12;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n                request.setData(queryData);\n                request.error('unauthorized');\n                return _context2.abrupt(\"return\");\n\n              case 12:\n                path = request.getPath();\n                endpoint = this._config.endpoints[path];\n                error = _validateInput[\"default\"].validate(endpoint.data, request.getData());\n\n                if (!error) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                timestamp = \"[\".concat(new Date().toISOString(), \"]\");\n                console.error(timestamp, error);\n                request.fail('invalid input');\n                return _context2.abrupt(\"return\");\n\n              case 20:\n                endpoint.respond(request);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 7]]);\n      }));\n\n      function requestHandler(_x, _x2) {\n        return _requestHandler.apply(this, arguments);\n      }\n\n      return requestHandler;\n    }()\n  }]);\n\n  return HTTPServer;\n}();\n\nmodule.exports = HTTPServer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhUVFBTZXJ2ZXIuanMiXSwibmFtZXMiOlsiSFRUUFNlcnZlciIsImNvbmZpZyIsIl9jb25maWciLCJfc2VydmVyIiwicmVxdWVzdEhhbmRsZXIiLCJiaW5kIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsImNsb3NlIiwiaHR0cFJlcXVlc3QiLCJyZXNwb25zZSIsInF1ZXJ5RGF0YSIsInVybCIsInBhcnNlIiwicXVlcnkiLCJyZXF1ZXN0IiwiUmVxdWVzdCIsInNldERhdGEiLCJlcnJvciIsInBhdGgiLCJnZXRQYXRoIiwiZW5kcG9pbnQiLCJlbmRwb2ludHMiLCJ2YWxpZGF0ZUlucHV0IiwidmFsaWRhdGUiLCJkYXRhIiwiZ2V0RGF0YSIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNvbnNvbGUiLCJmYWlsIiwicmVzcG9uZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0lBRU1BLFU7QUFDSixzQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNsQixTQUFLQyxPQUFMLEdBQWVELE1BQWY7QUFDQSxTQUFLRSxPQUFMLEdBQWUsSUFBZjtBQUNEOzs7O1dBRUQsaUJBQVE7QUFDTixVQUFNQyxjQUFjLEdBQUcsS0FBS0EsY0FBTCxDQUFvQkMsSUFBcEIsQ0FBeUIsSUFBekIsQ0FBdkI7QUFDQSxXQUFLRixPQUFMLEdBQWVHLGlCQUFLQyxZQUFMLENBQWtCSCxjQUFsQixFQUFrQ0ksTUFBbEMsQ0FBeUMsSUFBekMsQ0FBZjtBQUNEOzs7OzBFQUVEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUNRLEtBQUtMLE9BQUwsQ0FBYU0sS0FBYixFQURSOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7O29GQUlBLGtCQUFxQkMsV0FBckIsRUFBa0NDLFFBQWxDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNRQyxnQkFBQUEsU0FEUixHQUNvQkMsZ0JBQUlDLEtBQUosQ0FBVUosV0FBVyxDQUFDRyxHQUF0QixFQUEyQixJQUEzQixFQUFpQ0UsS0FEckQ7QUFFUUMsZ0JBQUFBLE9BRlIsR0FFa0IsSUFBSUMsbUJBQUosQ0FBWUwsU0FBWixFQUF1QkYsV0FBdkIsRUFBb0NDLFFBQXBDLENBRmxCO0FBQUE7QUFBQTtBQUFBLHVCQUtVLGtDQUFpQkssT0FBakIsRUFBMEJKLFNBQTFCLENBTFY7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQU9JSSxnQkFBQUEsT0FBTyxDQUFDRSxPQUFSLENBQWdCTixTQUFoQjtBQUNBSSxnQkFBQUEsT0FBTyxDQUFDRyxLQUFSLENBQWMsY0FBZDtBQVJKOztBQUFBO0FBWVFDLGdCQUFBQSxJQVpSLEdBWWVKLE9BQU8sQ0FBQ0ssT0FBUixFQVpmO0FBYVFDLGdCQUFBQSxRQWJSLEdBYW1CLEtBQUtwQixPQUFMLENBQWFxQixTQUFiLENBQXVCSCxJQUF2QixDQWJuQjtBQWVRRCxnQkFBQUEsS0FmUixHQWVnQkssMEJBQWNDLFFBQWQsQ0FBdUJILFFBQVEsQ0FBQ0ksSUFBaEMsRUFBc0NWLE9BQU8sQ0FBQ1csT0FBUixFQUF0QyxDQWZoQjs7QUFBQSxxQkFnQk1SLEtBaEJOO0FBQUE7QUFBQTtBQUFBOztBQWlCVVMsZ0JBQUFBLFNBakJWLGNBaUIwQixJQUFJQyxJQUFKLEdBQVdDLFdBQVgsRUFqQjFCO0FBa0JJQyxnQkFBQUEsT0FBTyxDQUFDWixLQUFSLENBQWNTLFNBQWQsRUFBeUJULEtBQXpCO0FBQ0FILGdCQUFBQSxPQUFPLENBQUNnQixJQUFSLENBQWEsZUFBYjtBQW5CSjs7QUFBQTtBQXVCRVYsZ0JBQUFBLFFBQVEsQ0FBQ1csT0FBVCxDQUFpQmpCLE9BQWpCOztBQXZCRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozs7O0FBMkJGa0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCbkMsVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvc3JkamFuL2NocmlzdGlhbi9zZXJ2ZXIvZGVidWctdGVzdC9zZXJ2ZXIvd2Vic2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXF1ZXN0IGZyb20gJy4vUmVxdWVzdCc7XG5cbmltcG9ydCBhdXRoZW50aWNhdGVVc2VyIGZyb20gJy4uL3V0aWxzL2F1dGhlbnRpY2F0ZVVzZXInO1xuaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCc7XG5pbXBvcnQgdXJsIGZyb20gJ3VybCc7XG5pbXBvcnQgdmFsaWRhdGVJbnB1dCBmcm9tICcuLi91dGlscy92YWxpZGF0ZUlucHV0JztcblxuY2xhc3MgSFRUUFNlcnZlciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLl9zZXJ2ZXIgPSBudWxsO1xuICB9XG5cbiAgc3RhcnQoKSB7XG4gICAgY29uc3QgcmVxdWVzdEhhbmRsZXIgPSB0aGlzLnJlcXVlc3RIYW5kbGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIocmVxdWVzdEhhbmRsZXIpLmxpc3Rlbig4MDA5KTtcbiAgfVxuXG4gIGFzeW5jIHN0b3AoKSB7XG4gICAgYXdhaXQgdGhpcy5fc2VydmVyLmNsb3NlKCk7XG4gIH1cblxuICBhc3luYyByZXF1ZXN0SGFuZGxlcihodHRwUmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgICBjb25zdCBxdWVyeURhdGEgPSB1cmwucGFyc2UoaHR0cFJlcXVlc3QudXJsLCB0cnVlKS5xdWVyeTtcbiAgICBjb25zdCByZXF1ZXN0ID0gbmV3IFJlcXVlc3QocXVlcnlEYXRhLCBodHRwUmVxdWVzdCwgcmVzcG9uc2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGF1dGhlbnRpY2F0ZVVzZXIocmVxdWVzdCwgcXVlcnlEYXRhKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmVxdWVzdC5zZXREYXRhKHF1ZXJ5RGF0YSk7XG4gICAgICByZXF1ZXN0LmVycm9yKCd1bmF1dGhvcml6ZWQnKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwYXRoID0gcmVxdWVzdC5nZXRQYXRoKCk7XG4gICAgY29uc3QgZW5kcG9pbnQgPSB0aGlzLl9jb25maWcuZW5kcG9pbnRzW3BhdGhdO1xuXG4gICAgY29uc3QgZXJyb3IgPSB2YWxpZGF0ZUlucHV0LnZhbGlkYXRlKGVuZHBvaW50LmRhdGEsIHJlcXVlc3QuZ2V0RGF0YSgpKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IGBbJHtuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCl9XWA7XG4gICAgICBjb25zb2xlLmVycm9yKHRpbWVzdGFtcCwgZXJyb3IpO1xuICAgICAgcmVxdWVzdC5mYWlsKCdpbnZhbGlkIGlucHV0Jyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZW5kcG9pbnQucmVzcG9uZChyZXF1ZXN0KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEhUVFBTZXJ2ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "HTTPServer.js"
      ],
      "names": [
        "HTTPServer",
        "config",
        "_config",
        "_server",
        "requestHandler",
        "bind",
        "http",
        "createServer",
        "listen",
        "close",
        "httpRequest",
        "response",
        "queryData",
        "url",
        "parse",
        "query",
        "request",
        "Request",
        "setData",
        "error",
        "path",
        "getPath",
        "endpoint",
        "endpoints",
        "validateInput",
        "validate",
        "data",
        "getData",
        "timestamp",
        "Date",
        "toISOString",
        "console",
        "fail",
        "respond",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEMA,U;AACJ,sBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,OAAL,GAAe,IAAf;AACD;;;;WAED,iBAAQ;AACN,UAAMC,cAAc,GAAG,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAvB;AACA,WAAKF,OAAL,GAAeG,iBAAKC,YAAL,CAAkBH,cAAlB,EAAkCI,MAAlC,CAAyC,IAAzC,CAAf;AACD;;;;0EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAKL,OAAL,CAAaM,KAAb,EADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;oFAIA,kBAAqBC,WAArB,EAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,SADR,GACoBC,gBAAIC,KAAJ,CAAUJ,WAAW,CAACG,GAAtB,EAA2B,IAA3B,EAAiCE,KADrD;AAEQC,gBAAAA,OAFR,GAEkB,IAAIC,mBAAJ,CAAYL,SAAZ,EAAuBF,WAAvB,EAAoCC,QAApC,CAFlB;AAAA;AAAA;AAAA,uBAKU,kCAAiBK,OAAjB,EAA0BJ,SAA1B,CALV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOII,gBAAAA,OAAO,CAACE,OAAR,CAAgBN,SAAhB;AACAI,gBAAAA,OAAO,CAACG,KAAR,CAAc,cAAd;AARJ;;AAAA;AAYQC,gBAAAA,IAZR,GAYeJ,OAAO,CAACK,OAAR,EAZf;AAaQC,gBAAAA,QAbR,GAamB,KAAKpB,OAAL,CAAaqB,SAAb,CAAuBH,IAAvB,CAbnB;AAeQD,gBAAAA,KAfR,GAegBK,0BAAcC,QAAd,CAAuBH,QAAQ,CAACI,IAAhC,EAAsCV,OAAO,CAACW,OAAR,EAAtC,CAfhB;;AAAA,qBAgBMR,KAhBN;AAAA;AAAA;AAAA;;AAiBUS,gBAAAA,SAjBV,cAiB0B,IAAIC,IAAJ,GAAWC,WAAX,EAjB1B;AAkBIC,gBAAAA,OAAO,CAACZ,KAAR,CAAcS,SAAd,EAAyBT,KAAzB;AACAH,gBAAAA,OAAO,CAACgB,IAAR,CAAa,eAAb;AAnBJ;;AAAA;AAuBEV,gBAAAA,QAAQ,CAACW,OAAT,CAAiBjB,OAAjB;;AAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AA2BFkB,MAAM,CAACC,OAAP,GAAiBnC,UAAjB",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
      "sourcesContent": [
        "import Request from './Request';\n\nimport authenticateUser from '../utils/authenticateUser';\nimport http from 'http';\nimport url from 'url';\nimport validateInput from '../utils/validateInput';\n\nclass HTTPServer {\n  constructor(config) {\n    this._config = config;\n    this._server = null;\n  }\n\n  start() {\n    const requestHandler = this.requestHandler.bind(this);\n    this._server = http.createServer(requestHandler).listen(8009);\n  }\n\n  async stop() {\n    await this._server.close();\n  }\n\n  async requestHandler(httpRequest, response) {\n    const queryData = url.parse(httpRequest.url, true).query;\n    const request = new Request(queryData, httpRequest, response);\n\n    try {\n      await authenticateUser(request, queryData);\n    } catch (error) {\n      request.setData(queryData);\n      request.error('unauthorized');\n      return;\n    }\n\n    const path = request.getPath();\n    const endpoint = this._config.endpoints[path];\n\n    const error = validateInput.validate(endpoint.data, request.getData());\n    if (error) {\n      const timestamp = `[${new Date().toISOString()}]`;\n      console.error(timestamp, error);\n      request.fail('invalid input');\n      return;\n    }\n\n    endpoint.respond(request);\n  }\n}\n\nmodule.exports = HTTPServer;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/webserver/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/webserver/Request.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/webserver/Request.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/webserver/Request.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/webserver/Request.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
        "sourceFileName": "Request.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _getPath2 = _interopRequireDefault(require(\"../utils/getPath\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Request = /*#__PURE__*/function () {\n  function Request(queryData, request, response) {\n    _classCallCheck(this, Request);\n\n    this._queryData = queryData;\n    this._request = request;\n    this._response = response;\n  }\n\n  _createClass(Request, [{\n    key: \"error\",\n    value: function error(_error) {\n      var data = JSON.stringify({\n        error: 'server error'\n      });\n\n      this._respond(data, 500);\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(message) {\n      var responseData = {\n        error: message\n      };\n      var data = JSON.stringify(responseData);\n\n      this._respond(data, 400, {\n        'Content-Type': 'text/plain'\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return this._queryData;\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return (0, _getPath2[\"default\"])(this._request.url);\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(queryData) {\n      this._queryData = queryData;\n    }\n  }, {\n    key: \"respond\",\n    value: function respond(text, status) {\n      status = status || 200;\n\n      this._respond(text, status, {\n        'Content-Type': 'text/plain'\n      });\n    }\n  }, {\n    key: \"respondJSON\",\n    value: function respondJSON(json, status) {\n      status = status || 200;\n\n      this._respond(json, status, {\n        'Content-Type': 'application/json'\n      });\n    }\n  }, {\n    key: \"_respond\",\n    value: function _respond(data, status, additionalHeaders) {\n      var headers = Object.assign({\n        'Access-Control-Allow-Origin': '*',\n        'Content-Length': Buffer.byteLength(data, 'utf8'),\n        'Content-Type': 'text/plain'\n      }, additionalHeaders);\n\n      this._response.writeHead(status, headers);\n\n      this._response.end(data, 'utf8');\n    }\n  }]);\n\n  return Request;\n}();\n\nmodule.exports = Request;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlcXVlc3QuanMiXSwibmFtZXMiOlsiUmVxdWVzdCIsInF1ZXJ5RGF0YSIsInJlcXVlc3QiLCJyZXNwb25zZSIsIl9xdWVyeURhdGEiLCJfcmVxdWVzdCIsIl9yZXNwb25zZSIsImVycm9yIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcmVzcG9uZCIsIm1lc3NhZ2UiLCJyZXNwb25zZURhdGEiLCJ1cmwiLCJ0ZXh0Iiwic3RhdHVzIiwianNvbiIsImFkZGl0aW9uYWxIZWFkZXJzIiwiaGVhZGVycyIsIk9iamVjdCIsImFzc2lnbiIsIkJ1ZmZlciIsImJ5dGVMZW5ndGgiLCJ3cml0ZUhlYWQiLCJlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7O0lBRU1BLE87QUFDSixtQkFBWUMsU0FBWixFQUF1QkMsT0FBdkIsRUFBZ0NDLFFBQWhDLEVBQTBDO0FBQUE7O0FBQ3hDLFNBQUtDLFVBQUwsR0FBa0JILFNBQWxCO0FBQ0EsU0FBS0ksUUFBTCxHQUFnQkgsT0FBaEI7QUFDQSxTQUFLSSxTQUFMLEdBQWlCSCxRQUFqQjtBQUNEOzs7O1dBRUQsZUFBTUksTUFBTixFQUFhO0FBQ1gsVUFBTUMsSUFBSSxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZTtBQUMxQkgsUUFBQUEsS0FBSyxFQUFFO0FBRG1CLE9BQWYsQ0FBYjs7QUFHQSxXQUFLSSxRQUFMLENBQWNILElBQWQsRUFBb0IsR0FBcEI7QUFDRDs7O1dBRUQsY0FBS0ksT0FBTCxFQUFjO0FBQ1osVUFBTUMsWUFBWSxHQUFHO0FBQ25CTixRQUFBQSxLQUFLLEVBQUVLO0FBRFksT0FBckI7QUFHQSxVQUFNSixJQUFJLEdBQUdDLElBQUksQ0FBQ0MsU0FBTCxDQUFlRyxZQUFmLENBQWI7O0FBQ0EsV0FBS0YsUUFBTCxDQUFjSCxJQUFkLEVBQW9CLEdBQXBCLEVBQXlCO0FBQUUsd0JBQWdCO0FBQWxCLE9BQXpCO0FBQ0Q7OztXQUVELG1CQUFVO0FBQ1IsYUFBTyxLQUFLSixVQUFaO0FBQ0Q7OztXQUVELG1CQUFVO0FBQ1IsYUFBTywwQkFBUSxLQUFLQyxRQUFMLENBQWNTLEdBQXRCLENBQVA7QUFDRDs7O1dBRUQsaUJBQVFiLFNBQVIsRUFBbUI7QUFDakIsV0FBS0csVUFBTCxHQUFrQkgsU0FBbEI7QUFDRDs7O1dBRUQsaUJBQVFjLElBQVIsRUFBY0MsTUFBZCxFQUFzQjtBQUNwQkEsTUFBQUEsTUFBTSxHQUFHQSxNQUFNLElBQUksR0FBbkI7O0FBQ0EsV0FBS0wsUUFBTCxDQUFjSSxJQUFkLEVBQW9CQyxNQUFwQixFQUE0QjtBQUFFLHdCQUFnQjtBQUFsQixPQUE1QjtBQUNEOzs7V0FFRCxxQkFBWUMsSUFBWixFQUFrQkQsTUFBbEIsRUFBMEI7QUFDeEJBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxJQUFJLEdBQW5COztBQUNBLFdBQUtMLFFBQUwsQ0FBY00sSUFBZCxFQUFvQkQsTUFBcEIsRUFBNEI7QUFBRSx3QkFBZ0I7QUFBbEIsT0FBNUI7QUFDRDs7O1dBRUQsa0JBQVNSLElBQVQsRUFBZVEsTUFBZixFQUF1QkUsaUJBQXZCLEVBQTBDO0FBQ3hDLFVBQUlDLE9BQU8sR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDMUIsdUNBQStCLEdBREw7QUFFMUIsMEJBQWtCQyxNQUFNLENBQUNDLFVBQVAsQ0FBa0JmLElBQWxCLEVBQXdCLE1BQXhCLENBRlE7QUFHMUIsd0JBQWdCO0FBSFUsT0FBZCxFQUlYVSxpQkFKVyxDQUFkOztBQU1BLFdBQUtaLFNBQUwsQ0FBZWtCLFNBQWYsQ0FBeUJSLE1BQXpCLEVBQWlDRyxPQUFqQzs7QUFDQSxXQUFLYixTQUFMLENBQWVtQixHQUFmLENBQW1CakIsSUFBbkIsRUFBeUIsTUFBekI7QUFDRDs7Ozs7O0FBR0hrQixNQUFNLENBQUNDLE9BQVAsR0FBaUIzQixPQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9zcmRqYW4vY2hyaXN0aWFuL3NlcnZlci9kZWJ1Zy10ZXN0L3NlcnZlci93ZWJzZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdldFBhdGggZnJvbSAnLi4vdXRpbHMvZ2V0UGF0aCc7XG5cbmNsYXNzIFJlcXVlc3Qge1xuICBjb25zdHJ1Y3RvcihxdWVyeURhdGEsIHJlcXVlc3QsIHJlc3BvbnNlKSB7XG4gICAgdGhpcy5fcXVlcnlEYXRhID0gcXVlcnlEYXRhO1xuICAgIHRoaXMuX3JlcXVlc3QgPSByZXF1ZXN0O1xuICAgIHRoaXMuX3Jlc3BvbnNlID0gcmVzcG9uc2U7XG4gIH1cblxuICBlcnJvcihlcnJvcikge1xuICAgIGNvbnN0IGRhdGEgPSBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBlcnJvcjogJ3NlcnZlciBlcnJvcicsXG4gICAgfSk7XG4gICAgdGhpcy5fcmVzcG9uZChkYXRhLCA1MDApO1xuICB9XG5cbiAgZmFpbChtZXNzYWdlKSB7XG4gICAgY29uc3QgcmVzcG9uc2VEYXRhID0ge1xuICAgICAgZXJyb3I6IG1lc3NhZ2UsXG4gICAgfTtcbiAgICBjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkocmVzcG9uc2VEYXRhKTtcbiAgICB0aGlzLl9yZXNwb25kKGRhdGEsIDQwMCwgeyAnQ29udGVudC1UeXBlJzogJ3RleHQvcGxhaW4nIH0pO1xuICB9XG5cbiAgZ2V0RGF0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcXVlcnlEYXRhO1xuICB9XG5cbiAgZ2V0UGF0aCgpIHtcbiAgICByZXR1cm4gZ2V0UGF0aCh0aGlzLl9yZXF1ZXN0LnVybCk7XG4gIH1cblxuICBzZXREYXRhKHF1ZXJ5RGF0YSkge1xuICAgIHRoaXMuX3F1ZXJ5RGF0YSA9IHF1ZXJ5RGF0YTtcbiAgfVxuXG4gIHJlc3BvbmQodGV4dCwgc3RhdHVzKSB7XG4gICAgc3RhdHVzID0gc3RhdHVzIHx8IDIwMDtcbiAgICB0aGlzLl9yZXNwb25kKHRleHQsIHN0YXR1cywgeyAnQ29udGVudC1UeXBlJzogJ3RleHQvcGxhaW4nIH0pO1xuICB9XG5cbiAgcmVzcG9uZEpTT04oanNvbiwgc3RhdHVzKSB7XG4gICAgc3RhdHVzID0gc3RhdHVzIHx8IDIwMDtcbiAgICB0aGlzLl9yZXNwb25kKGpzb24sIHN0YXR1cywgeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0pO1xuICB9XG5cbiAgX3Jlc3BvbmQoZGF0YSwgc3RhdHVzLCBhZGRpdGlvbmFsSGVhZGVycykge1xuICAgIHZhciBoZWFkZXJzID0gT2JqZWN0LmFzc2lnbih7XG4gICAgICAnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJzogJyonLFxuICAgICAgJ0NvbnRlbnQtTGVuZ3RoJzogQnVmZmVyLmJ5dGVMZW5ndGgoZGF0YSwgJ3V0ZjgnKSxcbiAgICAgICdDb250ZW50LVR5cGUnOiAndGV4dC9wbGFpbicsXG4gICAgfSwgYWRkaXRpb25hbEhlYWRlcnMpO1xuXG4gICAgdGhpcy5fcmVzcG9uc2Uud3JpdGVIZWFkKHN0YXR1cywgaGVhZGVycyk7XG4gICAgdGhpcy5fcmVzcG9uc2UuZW5kKGRhdGEsICd1dGY4Jyk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZXF1ZXN0O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Request.js"
      ],
      "names": [
        "Request",
        "queryData",
        "request",
        "response",
        "_queryData",
        "_request",
        "_response",
        "error",
        "data",
        "JSON",
        "stringify",
        "_respond",
        "message",
        "responseData",
        "url",
        "text",
        "status",
        "json",
        "additionalHeaders",
        "headers",
        "Object",
        "assign",
        "Buffer",
        "byteLength",
        "writeHead",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;;;IAEMA,O;AACJ,mBAAYC,SAAZ,EAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AAAA;;AACxC,SAAKC,UAAL,GAAkBH,SAAlB;AACA,SAAKI,QAAL,GAAgBH,OAAhB;AACA,SAAKI,SAAL,GAAiBH,QAAjB;AACD;;;;WAED,eAAMI,MAAN,EAAa;AACX,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BH,QAAAA,KAAK,EAAE;AADmB,OAAf,CAAb;;AAGA,WAAKI,QAAL,CAAcH,IAAd,EAAoB,GAApB;AACD;;;WAED,cAAKI,OAAL,EAAc;AACZ,UAAMC,YAAY,GAAG;AACnBN,QAAAA,KAAK,EAAEK;AADY,OAArB;AAGA,UAAMJ,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeG,YAAf,CAAb;;AACA,WAAKF,QAAL,CAAcH,IAAd,EAAoB,GAApB,EAAyB;AAAE,wBAAgB;AAAlB,OAAzB;AACD;;;WAED,mBAAU;AACR,aAAO,KAAKJ,UAAZ;AACD;;;WAED,mBAAU;AACR,aAAO,0BAAQ,KAAKC,QAAL,CAAcS,GAAtB,CAAP;AACD;;;WAED,iBAAQb,SAAR,EAAmB;AACjB,WAAKG,UAAL,GAAkBH,SAAlB;AACD;;;WAED,iBAAQc,IAAR,EAAcC,MAAd,EAAsB;AACpBA,MAAAA,MAAM,GAAGA,MAAM,IAAI,GAAnB;;AACA,WAAKL,QAAL,CAAcI,IAAd,EAAoBC,MAApB,EAA4B;AAAE,wBAAgB;AAAlB,OAA5B;AACD;;;WAED,qBAAYC,IAAZ,EAAkBD,MAAlB,EAA0B;AACxBA,MAAAA,MAAM,GAAGA,MAAM,IAAI,GAAnB;;AACA,WAAKL,QAAL,CAAcM,IAAd,EAAoBD,MAApB,EAA4B;AAAE,wBAAgB;AAAlB,OAA5B;AACD;;;WAED,kBAASR,IAAT,EAAeQ,MAAf,EAAuBE,iBAAvB,EAA0C;AACxC,UAAIC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC1B,uCAA+B,GADL;AAE1B,0BAAkBC,MAAM,CAACC,UAAP,CAAkBf,IAAlB,EAAwB,MAAxB,CAFQ;AAG1B,wBAAgB;AAHU,OAAd,EAIXU,iBAJW,CAAd;;AAMA,WAAKZ,SAAL,CAAekB,SAAf,CAAyBR,MAAzB,EAAiCG,OAAjC;;AACA,WAAKb,SAAL,CAAemB,GAAf,CAAmBjB,IAAnB,EAAyB,MAAzB;AACD;;;;;;AAGHkB,MAAM,CAACC,OAAP,GAAiB3B,OAAjB",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/webserver/",
      "sourcesContent": [
        "import getPath from '../utils/getPath';\n\nclass Request {\n  constructor(queryData, request, response) {\n    this._queryData = queryData;\n    this._request = request;\n    this._response = response;\n  }\n\n  error(error) {\n    const data = JSON.stringify({\n      error: 'server error',\n    });\n    this._respond(data, 500);\n  }\n\n  fail(message) {\n    const responseData = {\n      error: message,\n    };\n    const data = JSON.stringify(responseData);\n    this._respond(data, 400, { 'Content-Type': 'text/plain' });\n  }\n\n  getData() {\n    return this._queryData;\n  }\n\n  getPath() {\n    return getPath(this._request.url);\n  }\n\n  setData(queryData) {\n    this._queryData = queryData;\n  }\n\n  respond(text, status) {\n    status = status || 200;\n    this._respond(text, status, { 'Content-Type': 'text/plain' });\n  }\n\n  respondJSON(json, status) {\n    status = status || 200;\n    this._respond(json, status, { 'Content-Type': 'application/json' });\n  }\n\n  _respond(data, status, additionalHeaders) {\n    var headers = Object.assign({\n      'Access-Control-Allow-Origin': '*',\n      'Content-Length': Buffer.byteLength(data, 'utf8'),\n      'Content-Type': 'text/plain',\n    }, additionalHeaders);\n\n    this._response.writeHead(status, headers);\n    this._response.end(data, 'utf8');\n  }\n}\n\nmodule.exports = Request;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/utils/getPath.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/utils/getPath.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/utils/getPath.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/utils/getPath.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
        "sourceFileName": "getPath.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getPath;\n\nfunction getPath(urlString) {\n  if (!urlString || typeof urlString !== 'string') {\n    return null;\n  }\n\n  if (urlString.indexOf('?') === -1) {\n    return urlString;\n  } // strip get params if there are any\n\n\n  return urlString.substr(0, urlString.indexOf('?'));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFBhdGguanMiXSwibmFtZXMiOlsiZ2V0UGF0aCIsInVybFN0cmluZyIsImluZGV4T2YiLCJzdWJzdHIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZSxTQUFTQSxPQUFULENBQWlCQyxTQUFqQixFQUE0QjtBQUN6QyxNQUFJLENBQUNBLFNBQUQsSUFBYyxPQUFPQSxTQUFQLEtBQXFCLFFBQXZDLEVBQWlEO0FBQy9DLFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQUlBLFNBQVMsQ0FBQ0MsT0FBVixDQUFrQixHQUFsQixNQUEyQixDQUFDLENBQWhDLEVBQW1DO0FBQ2pDLFdBQU9ELFNBQVA7QUFDRCxHQVB3QyxDQVN6Qzs7O0FBQ0EsU0FBT0EsU0FBUyxDQUFDRSxNQUFWLENBQWlCLENBQWpCLEVBQW9CRixTQUFTLENBQUNDLE9BQVYsQ0FBa0IsR0FBbEIsQ0FBcEIsQ0FBUDtBQUNEIiwic291cmNlUm9vdCI6Ii9ob21lL3NyZGphbi9jaHJpc3RpYW4vc2VydmVyL2RlYnVnLXRlc3Qvc2VydmVyL3V0aWxzLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFBhdGgodXJsU3RyaW5nKSB7XG4gIGlmICghdXJsU3RyaW5nIHx8IHR5cGVvZiB1cmxTdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBpZiAodXJsU3RyaW5nLmluZGV4T2YoJz8nKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gdXJsU3RyaW5nO1xuICB9XG5cbiAgLy8gc3RyaXAgZ2V0IHBhcmFtcyBpZiB0aGVyZSBhcmUgYW55XG4gIHJldHVybiB1cmxTdHJpbmcuc3Vic3RyKDAsIHVybFN0cmluZy5pbmRleE9mKCc/JykpO1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "getPath.js"
      ],
      "names": [
        "getPath",
        "urlString",
        "indexOf",
        "substr"
      ],
      "mappings": ";;;;;;;AAAe,SAASA,OAAT,CAAiBC,SAAjB,EAA4B;AACzC,MAAI,CAACA,SAAD,IAAc,OAAOA,SAAP,KAAqB,QAAvC,EAAiD;AAC/C,WAAO,IAAP;AACD;;AAED,MAAIA,SAAS,CAACC,OAAV,CAAkB,GAAlB,MAA2B,CAAC,CAAhC,EAAmC;AACjC,WAAOD,SAAP;AACD,GAPwC,CASzC;;;AACA,SAAOA,SAAS,CAACE,MAAV,CAAiB,CAAjB,EAAoBF,SAAS,CAACC,OAAV,CAAkB,GAAlB,CAApB,CAAP;AACD",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "sourcesContent": [
        "export default function getPath(urlString) {\n  if (!urlString || typeof urlString !== 'string') {\n    return null;\n  }\n\n  if (urlString.indexOf('?') === -1) {\n    return urlString;\n  }\n\n  // strip get params if there are any\n  return urlString.substr(0, urlString.indexOf('?'));\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/srdjan/christian/server/debug-test/server/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/srdjan/christian/server/debug-test\",\"filename\":\"/home/srdjan/christian/server/debug-test/server/utils/authenticateUser.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/srdjan/christian/server/debug-test\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/srdjan/christian/server/debug-test",
      "filename": "/home/srdjan/christian/server/debug-test/server/utils/authenticateUser.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/srdjan/christian/server/debug-test",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/srdjan/christian/server/debug-test/server/utils/authenticateUser.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/srdjan/christian/server/debug-test/server/utils/authenticateUser.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
        "sourceFileName": "authenticateUser.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = authenticateUser;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _validateInput = _interopRequireDefault(require(\"./validateInput\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar SingleSignOnKey = 'SingleSignOnKey';\n\nfunction authenticateUser(_x, _x2) {\n  return _authenticateUser.apply(this, arguments);\n}\n\nfunction _authenticateUser() {\n  _authenticateUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(request, queryData) {\n    var ssoToken, userData;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ssoToken = queryData.ssoToken;\n            _context.next = 3;\n            return _jsonwebtoken[\"default\"].verify(ssoToken, SingleSignOnKey);\n\n          case 3:\n            userData = _context.sent;\n            delete queryData.ssoToken;\n\n            if (userData.id) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error('Missing id in user data');\n\n          case 9:\n            if (!(userData.email && !_validateInput[\"default\"].email(userData.email))) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new Error('Invalid email in user data');\n\n          case 13:\n            if (userData.name) {\n              _context.next = 15;\n              break;\n            }\n\n            throw new Error('Missing name in user data');\n\n          case 15:\n            return _context.abrupt(\"return\", userData);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _authenticateUser.apply(this, arguments);\n}\n\nmodule.exports = authenticateUser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGhlbnRpY2F0ZVVzZXIuanMiXSwibmFtZXMiOlsiU2luZ2xlU2lnbk9uS2V5IiwiYXV0aGVudGljYXRlVXNlciIsInJlcXVlc3QiLCJxdWVyeURhdGEiLCJzc29Ub2tlbiIsImp3dCIsInZlcmlmeSIsInVzZXJEYXRhIiwiaWQiLCJFcnJvciIsImVtYWlsIiwidmFsaWRhdGVJbnB1dCIsIm5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsZUFBZSxHQUFHLGlCQUF4Qjs7U0FFOEJDLGdCOzs7Ozs4RUFBZixpQkFBZ0NDLE9BQWhDLEVBQXlDQyxTQUF6QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTEMsWUFBQUEsUUFESyxHQUNRRCxTQURSLENBQ0xDLFFBREs7QUFBQTtBQUFBLG1CQUVVQyx5QkFBSUMsTUFBSixDQUFXRixRQUFYLEVBQXFCSixlQUFyQixDQUZWOztBQUFBO0FBRVBPLFlBQUFBLFFBRk87QUFHYixtQkFBT0osU0FBUyxDQUFDQyxRQUFqQjs7QUFIYSxnQkFLUkcsUUFBUSxDQUFDQyxFQUxEO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtCQU1MLElBQUlDLEtBQUosQ0FBVSx5QkFBVixDQU5LOztBQUFBO0FBQUEsa0JBT0ZGLFFBQVEsQ0FBQ0csS0FBVCxJQUFrQixDQUFDQywwQkFBY0QsS0FBZCxDQUFvQkgsUUFBUSxDQUFDRyxLQUE3QixDQVBqQjtBQUFBO0FBQUE7QUFBQTs7QUFBQSxrQkFRTCxJQUFJRCxLQUFKLENBQVUsNEJBQVYsQ0FSSzs7QUFBQTtBQUFBLGdCQVNERixRQUFRLENBQUNLLElBVFI7QUFBQTtBQUFBO0FBQUE7O0FBQUEsa0JBVUwsSUFBSUgsS0FBSixDQUFVLDJCQUFWLENBVks7O0FBQUE7QUFBQSw2Q0FhTkYsUUFiTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBZ0JmTSxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLGdCQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9zcmRqYW4vY2hyaXN0aWFuL3NlcnZlci9kZWJ1Zy10ZXN0L3NlcnZlci91dGlscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbic7XG5pbXBvcnQgdmFsaWRhdGVJbnB1dCBmcm9tICcuL3ZhbGlkYXRlSW5wdXQnO1xuXG5jb25zdCBTaW5nbGVTaWduT25LZXkgPSAnU2luZ2xlU2lnbk9uS2V5JztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gYXV0aGVudGljYXRlVXNlcihyZXF1ZXN0LCBxdWVyeURhdGEpIHtcbiAgY29uc3QgeyBzc29Ub2tlbiB9ID0gcXVlcnlEYXRhO1xuICBjb25zdCB1c2VyRGF0YSA9IGF3YWl0IGp3dC52ZXJpZnkoc3NvVG9rZW4sIFNpbmdsZVNpZ25PbktleSk7XG4gIGRlbGV0ZSBxdWVyeURhdGEuc3NvVG9rZW47XG5cbiAgaWYgKCF1c2VyRGF0YS5pZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBpZCBpbiB1c2VyIGRhdGEnKTtcbiAgfSBlbHNlIGlmICh1c2VyRGF0YS5lbWFpbCAmJiAhdmFsaWRhdGVJbnB1dC5lbWFpbCh1c2VyRGF0YS5lbWFpbCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW1haWwgaW4gdXNlciBkYXRhJyk7XG4gIH0gZWxzZSBpZiAoIXVzZXJEYXRhLm5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgbmFtZSBpbiB1c2VyIGRhdGEnKTtcbiAgfVxuXG4gIHJldHVybiB1c2VyRGF0YTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhdXRoZW50aWNhdGVVc2VyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "authenticateUser.js"
      ],
      "names": [
        "SingleSignOnKey",
        "authenticateUser",
        "request",
        "queryData",
        "ssoToken",
        "jwt",
        "verify",
        "userData",
        "id",
        "Error",
        "email",
        "validateInput",
        "name",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AAEA,IAAMA,eAAe,GAAG,iBAAxB;;SAE8BC,gB;;;;;8EAAf,iBAAgCC,OAAhC,EAAyCC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,QADK,GACQD,SADR,CACLC,QADK;AAAA;AAAA,mBAEUC,yBAAIC,MAAJ,CAAWF,QAAX,EAAqBJ,eAArB,CAFV;;AAAA;AAEPO,YAAAA,QAFO;AAGb,mBAAOJ,SAAS,CAACC,QAAjB;;AAHa,gBAKRG,QAAQ,CAACC,EALD;AAAA;AAAA;AAAA;;AAAA,kBAML,IAAIC,KAAJ,CAAU,yBAAV,CANK;;AAAA;AAAA,kBAOFF,QAAQ,CAACG,KAAT,IAAkB,CAACC,0BAAcD,KAAd,CAAoBH,QAAQ,CAACG,KAA7B,CAPjB;AAAA;AAAA;AAAA;;AAAA,kBAQL,IAAID,KAAJ,CAAU,4BAAV,CARK;;AAAA;AAAA,gBASDF,QAAQ,CAACK,IATR;AAAA;AAAA;AAAA;;AAAA,kBAUL,IAAIH,KAAJ,CAAU,2BAAV,CAVK;;AAAA;AAAA,6CAaNF,QAbM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBfM,MAAM,CAACC,OAAP,GAAiBb,gBAAjB",
      "sourceRoot": "/home/srdjan/christian/server/debug-test/server/utils/",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken';\nimport validateInput from './validateInput';\n\nconst SingleSignOnKey = 'SingleSignOnKey';\n\nexport default async function authenticateUser(request, queryData) {\n  const { ssoToken } = queryData;\n  const userData = await jwt.verify(ssoToken, SingleSignOnKey);\n  delete queryData.ssoToken;\n\n  if (!userData.id) {\n    throw new Error('Missing id in user data');\n  } else if (userData.email && !validateInput.email(userData.email)) {\n    throw new Error('Invalid email in user data');\n  } else if (!userData.name) {\n    throw new Error('Missing name in user data');\n  }\n\n  return userData;\n}\n\nmodule.exports = authenticateUser;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636548316000
  }
}